{"version":3,"file":"rslidy.js","mappings":";;;AAAA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,yBAAyB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,yBAAyB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,yBAAyB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC1MO;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oKAAoK;AACpK,oJAAoJ,eAAe;AACnK;AACA,ilCAAilC,eAAe,8EAA8E,eAAe;AAC7rC;AACA;AACA;;;ACfwC;AACT;AACxB;AACP;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,WAAa,yBAAyB;AAChF,UAAU,IAAM;AAChB;AACA;AACA;AACA,gBAAgB,IAAM;AACtB,gBAAgB,IAAM;AACtB,gBAAgB,IAAM;AACtB,gBAAgB,IAAM;AACtB,gBAAgB,IAAM;AACtB;AACA;AACA,gBAAgB,IAAM;AACtB;AACA,wCAAwC,aAAe;AACvD;AACA,gBAAgB,IAAM;AACtB;AACA,gBAAgB,IAAM;AACtB;AACA;AACA,gBAAgB,IAAM;AACtB;AACA,wCAAwC,SAAW;AACnD;AACA,gBAAgB,IAAM;AACtB;AACA,gBAAgB,IAAM;AACtB;AACA;AACA,gBAAgB,IAAM;AACtB;AACA,wCAAwC,eAAiB;AACzD,wCAAwC,cAAgB;AACxD;AACA,gBAAgB,IAAM;AACtB;AACA,gBAAgB,IAAM;AACtB;AACA;AACA,gBAAgB,IAAM;AACtB;AACA,sDAAsD,SAAW;AACjE;AACA,gBAAgB,IAAM;AACtB,gBAAgB,IAAM;AACtB,gBAAgB,IAAM;AACtB;AACA;AACA,gBAAgB,IAAM;AACtB;AACA,sDAAsD,SAAW;AACjE;AACA,gBAAgB,IAAM;AACtB,gBAAgB,IAAM;AACtB,gBAAgB,IAAM;AACtB;AACA;AACA,gBAAgB,IAAM;AACtB;AACA,wCAAwC,SAAW;AACnD;AACA,gBAAgB,IAAM;AACtB,gBAAgB,IAAM;AACtB,gBAAgB,IAAM;AACtB;AACA;AACA,gBAAgB,IAAM;AACtB;AACA,wCAAwC,SAAW;AACnD;AACA,gBAAgB,IAAM;AACtB;AACA,gBAAgB,IAAM;AACtB;AACA;AACA,gBAAgB,IAAM;AACtB;AACA,wCAAwC,UAAY;AACpD;AACA,gBAAgB,IAAM;AACtB;AACA,gBAAgB,IAAM;AACtB;AACA;AACA,gBAAgB,IAAM;AACtB;AACA,wCAAwC,aAAe;AACvD;AACA,gBAAgB,IAAM;AACtB;AACA,gBAAgB,IAAM;AACtB;AACA;AACA,gBAAgB,IAAM;AACtB;AACA,wCAAwC,SAAW;AACnD;AACA,gBAAgB,IAAM;AACtB;AACA,gBAAgB,IAAM;AACtB;AACA;AACA,gBAAgB,IAAM;AACtB;AACA,wCAAwC,QAAU;AAClD;AACA,gBAAgB,IAAM;AACtB;AACA,gBAAgB,IAAM;AACtB;AACA;AACA,gBAAgB,IAAM;AACtB;AACA,wCAAwC,eAAiB;AACzD;AACA,gBAAgB,IAAM;AACtB;AACA,gBAAgB,IAAM;AACtB;AACA;AACA,gBAAgB,IAAM;AACtB;AACA,wCAAwC,eAAiB;AACzD;AACA,gBAAgB,IAAM;AACtB;AACA,gBAAgB,IAAM;AACtB;AACA;AACA,gBAAgB,IAAM;AACtB;AACA,wCAAwC,cAAgB;AACxD;AACA,gBAAgB,IAAM;AACtB;AACA,gBAAgB,IAAM;AACtB;AACA;AACA,gBAAgB,IAAM;AACtB;AACA,gBAAgB,IAAM;AACtB;AACA,gBAAgB,IAAM;AACtB;AACA;AACA,gBAAgB,IAAM;AACtB;AACA,gBAAgB,IAAM;AACtB;AACA,gBAAgB,IAAM;AACtB;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,oFAAoF,OAAS;AAC7F,+DAA+D,cAAgB;AAC/E;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACO;AACP;AACA;AACA;AACA;;AAEA,mBAAmB,WAAa;AAChC;AACA;AACA,mBAAmB,WAAa;AAChC;AACA;AACA,mBAAmB,WAAa;AAChC;AACA;AACA,mBAAmB,WAAa;AAChC;AACA;AACA;AACO;AACP,oCAAoC,OAAO,qBAAqB,IAAI;AACpE,uGAAuG,KAAK,qBAAqB,IAAI,WAAW,QAAQ,IAAI,KAAK;AACjK,4DAA4D,IAAI;AAChE,sCAAsC,QAAQ,oCAAoC,IAAI,IAAI,MAAM;AAChG;AACA;AACO;AACP,kDAAkD,IAAI,cAAc,QAAQ,IAAI,MAAM;AAC/E;AACP,+CAA+C,IAAI;AACnD;AACA;AACO;AACP;AACA;AACA;AACA,QAAQ,QAAU;AAClB;AACA,0CAA0C,WAAa;AACvD;AACA;AACA,QAAQ,QAAU;AAClB;AACA,2CAA2C,WAAa;AACxD;AACA;AACA,QAAQ,QAAU;AAClB;AACA,2CAA2C,WAAa;AACxD;AACA;AACA,QAAQ,QAAU;AAClB;AACA,+CAA+C,WAAa;AAC5D;AACA;AACA,QAAQ,QAAU;AAClB;AACA,kDAAkD,WAAa;AAC/D;AACA;AACA,eAAe,QAAU;AACzB,2BAA2B,QAAU,4EAA4E,eAAiB;AAClI,2BAA2B,QAAU,4EAA4E,eAAiB;AAClI,2BAA2B,QAAU,2EAA2E,cAAgB;AAChI;AACA;AACA,eAAe,QAAU;AACzB,2BAA2B,QAAU,gFAAgF,eAAiB;AACtI,2BAA2B,QAAU,gFAAgF,eAAiB;AACtI,2BAA2B,QAAU,+EAA+E,cAAgB;AACpI;AACA;AACO;AACP;AACA;AACA;AACA,QAAQ,cAAgB;AACxB;AACA,0CAA0C,WAAa;AACvD;AACA;AACA,QAAQ,cAAgB;AACxB;AACA,2CAA2C,WAAa;AACxD;AACA;AACA,QAAQ,cAAgB;AACxB;AACA,0CAA0C,WAAa;AACvD;AACA,+CAA+C,cAAgB;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0GAA0G;AAC1G;AACA;AACA;AACA,QAAQ,cAAgB;AACxB;AACA;AACA;AACA;AACA,QAAQ,cAAgB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,cAAgB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE;AACtE,kCAAkC;AAClgDAAgD,cAAgB;AAChE;AACA;AACO;AACP;AACA;AACA;AACA;AACA,8EAA8E,OAAS;AACvF,yDAAyD,SAAW;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6GAA6G,OAAS;AACtH,4CAA4C,aAAe;AAC3D;AACA,mFAAmF,OAAS;AAC5F,4CAA4C,SAAW;AACvD;AACA,kFAAkF,OAAS;AAC3F,+CAA+C,eAAiB;AAChE;AACA;;AAEA;AACA,oFAAoF,OAAS;AAC7F,4DAA4D,SAAW;AACvE;;AAEA,uFAAuF,OAAS;AAChG,4DAA4D,SAAW;AACvE;AACA;AACA;AACA,oFAAoF,OAAS;AAC7F,8CAA8C,SAAW;AACzD;AACA,mFAAmF,OAAS;AAC5F,8CAA8C,SAAW;AACzD;AACA;;AAEA;AACA,0GAA0G,OAAS;AACnH,4CAA4C,UAAY;AACxD;AACA,yGAAyG,OAAS;AAClH,4CAA4C,aAAe;AAC3D;AACA,mFAAmF,OAAS;AAC5F,4CAA4C,SAAW;AACvD;AACA,wGAAwG,OAAS;AACjH,4CAA4C,QAAU;AACtD;AACA;;AAEA;AACA;AACA;AACA;AACA;;;ACvemD;AAC5C;AACP;AACA;AACA;AACA;AACA,iEAAiE,aAAaxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,yBAAyB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,eAAe;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,8BAA8B;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACrMyD;AAClD;AACP;AACA;AACA,yEAAyE,mBAAmB;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,mBAAmB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,QAAQ,EAAE,MAAM;AAC5C;AACA;AACA,0BAA0B;AAC1B,uCAAuC;AACvC,wBAAwB;AACxB,sBAAsB,+BAA+B,yBAAyB;AAC9E,yBAAyB,gBAAgB,+BAA+B,4BAA4B;AACpG,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,kBAAkB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oEAAoE;AACpE;AACA;AACA;AACA;AACA,wEAAwE;AACxE;AACA;AACA;AACA,yDAAyD,MAAM;AAC/D;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,eAAe;AAC9B,gBAAgB,gBAAgB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,yBAAyB,gBAAgB;AACzC,yBAAyB,iBAAiB;;AAE1C;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,YAAY;AAC/C,oCAAoC,QAAQ;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0EAA0E,yBAAyB;AACnG;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,UAAU,6BAA6B;AACpE;AACA;AACA,2BAA2B,aAAa,gBAAgB,IAAI;AAC5D;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,UAAU;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE,IAAI,IAAI,4BAA4B;AAC1G;AACA;AACA,uCAAuC;AACvC,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC,mDAAmD,sBAAsB,IAAI;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;;AClckD;AAC3C;AACP;AACA;AACA;AACA,gGAAgG,YAAY;AAC5G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6GAA6G,6BAA6B;AAC1I;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,8BAA8B;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC3R6E;AACtE;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,8BAA8B;AACtD;AACA;AACA;AACA,oFAAoF,cAAc;AAClG;AACA,gEAAgE,YAAY;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6EAA6E,SAAS;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,2BAA2B;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D;AAC7D,oEAAoE;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE,cAAc;AACpF;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC9KO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,wBAAwB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,wBAAwB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;;ACtHqD;AACyB;AACvE;AACP;AACA;AACA;AACA;AACA;AACA,mCAAmC,eAAe;AAClD;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,8BAA8B,qBAAqB;AACnD,8BAA8B,iBAAiB;AAC/C;AACA;AACA;AACA,qEAAqE;AACrE;AACA;AACA,aAAa;AACb;AACA,qEAAqE;AACrE;AACA;AACA,aAAa,UAAU,kCAAkC;AACzD,SAAS;AACT;AACA;AACA,0CAA0C;AAC1C,qCAAqC,WAAW;AAChD;AACA,sCAAsC,gCAAgC,UAAU,iCAAiC;AACjH;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa,WAAW;AACxB;AACA,SAAS;AACT,8EAA8E,eAAe;AAC7F,4EAA4E,eAAewBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,gBAAgB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACvWkD;AAC3C;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAiE,YAAY;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,wBAAwB;AACheAAegC;AACe;AACW;AACb;AACE;AACF;AACS;AACoC;AAC1F;AACO;AACP;AACA;AACA,yBAAyB,KAAK;AAC9B;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC,mCAAmC;AACnC,mCAAmC;AACnC,8BAA8B;AAC9B,uCAAuC;AACvC,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,kCAAkC;AAClC,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA,8BAA8B;AAC9B;AACA,mCAAmC;AACnC,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,qBAAqB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,qBAAqB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,eAAe;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,oBAAoB;AACnD,oDAAoD,UAAU;AAC9D,oDAAoD,SAAS;AAC7D,2BAA2B,gBAAgB;AAC3C,4BAA4B,iBAAiB;AAC7C,iCAAiC,sBAAsB;AACvD,4BAA4B,iBAAiB;AAC7C,2BAA2B,gBAAgB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,mBAAmB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,kGAAkG,eAAe;AACjH;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtwBAAwB,mBAAmB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,2BAA2B;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wGAAwG;AACxmDAAmD,YAAY;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA","sources":["webpack://rslidy/./src/ts/build/js/ts/utils.js","webpack://rslidy/./src/ts/build/js/ts/icon-definitions.js","webpack://rslidy/./src/ts/build/js/ts/text.en.js","webpack://rslidy/./src/ts/build/js/ts/html-definitions.js","webpack://rslidy/./src/ts/build/js/ts/settings.js","webpack://rslidy/./src/ts/build/js/ts/print-settings.js","webpack://rslidy/./src/ts/build/js/ts/toolbar.js","webpack://rslidy/./src/ts/build/js/ts/overview.js","webpack://rslidy/./src/ts/build/js/ts/slide-transition.js","webpack://rslidy/./src/ts/build/js/ts/content.js","webpack://rslidy/./src/ts/build/js/ts/image-viewer.js","webpack://rslidy/./src/ts/build/js/ts/rslidy.js"],"sourcesContent":["// Class Utils\n// Implements utility functions.\nexport class Utils {\n    // ---\n    // Description: Returns the width of the slide.\n    // aspect_ratio: The desired aspect ratio (or 0 for dynamic calculation).\n    // custom_width: The custom width.\n    // ---\n    getSlideWidth(aspect_ratio, custom_width) {\n        aspect_ratio = aspect_ratio || 0;\n        if (aspect_ratio == 0)\n            return window.outerWidth;\n        var width = custom_width; // ...\n        return width;\n    }\n    // ---\n    // Description: Returns the height of the slide.\n    // aspect_ratio: The desired aspect ratio (or 0 for dynamic calculation).\n    // custom_width: The custom width.\n    // ---\n    getSlideHeight(aspect_ratio, custom_width) {\n        aspect_ratio = aspect_ratio || 0;\n        if (aspect_ratio == 0)\n            return window.outerHeight;\n        var width = custom_width;\n        var height = width / aspect_ratio;\n        return height;\n    }\n    // ---\n    // Description: Returns the current aspect ratio.\n    // ---\n    getCurrentAspectRatio() {\n        var window_width = window.innerWidth;\n        var window_height = window.innerHeight;\n        var current_aspect_ratio = window_width / window_height;\n        return current_aspect_ratio;\n    }\n    // ---\n    // Description: Gets the relative width of an element, with respect to the\n    // whole window.\n    // element: Specifies the element to consider.\n    // aspect_ratio: The desired aspect ratio (or 0 for dynamic calculation).\n    // custom_width: The custom width.\n    // ---\n    getRelativeWidth(element_width, aspect_ratio, custom_width) {\n        var window_width = aspect_ratio == 0 ? window.outerWidth : custom_width;\n        var relative_width = element_width / window_width;\n        return relative_width;\n    }\n    // ---\n    // Description: Returns the integer representation of a character.\n    // character: Specifies the character to convert.\n    // ---\n    toInt(character) {\n        return 1 * character;\n    }\n    // ---\n    // Description: Returns a 2-digit-representation of a number (e.g. \"6\"\n    // becomes \"06\", but \"11\" will still be \"11\").\n    // num: Specify the number.\n    // ---\n    toTwoDigits(num) {\n        return (\"0\" + num).slice(-2);\n    }\n    // ---\n    // Description: Switches the existence of a class of each element in a\n    // specified list (ignores elements with class \"ignore\").\n    // element_list: The list of elements.\n    // class_name: The name of the class.\n    // ---\n    switchElementsClass(element_list, class_name) {\n        for (var i = 0; i < element_list.length; i++) {\n            if (element_list[i].classList.contains(\"ignore\") == true)\n                continue;\n            if (element_list[i].classList.contains(class_name) == true)\n                element_list[i].classList.remove(class_name);\n            else\n                element_list[i].classList.add(class_name);\n        }\n    }\n    // ---\n    // Description: Adds a class to an element if not already present\n    // element_list: The list of elements.\n    // class_name: The name of the class.\n    // ---\n    addElementsClass(element_list, class_name) {\n        for (var i = 0; i < element_list.length; i++) {\n            if (element_list[i].classList.length == 0 ||\n                element_list[i].classList.contains(class_name) == false) {\n                element_list[i].classList.add(class_name);\n            }\n        }\n    }\n    // ---\n    // Description: Inverts the color attribute of all elements in the specified\n    // list.\n    // element_list: The list of elements.\n    // low_light_mode: Specified whether colors should be inverted or reset.\n    // ---\n    invertElementsColor(element_list, low_light_mode) {\n        low_light_mode = low_light_mode || false;\n        for (var i = 0; i < element_list.length; i++) {\n            // Continue if night mode is to be disabled\n            if (low_light_mode == true) {\n                element_list[i].style.color = \"\";\n                continue;\n            }\n            // Invert color\n            var color_rgb = getComputedStyle(element_list[i]).getPropertyValue(\"color\");\n            var color_hex = \"#\";\n            var rgx = /\\d+/g;\n            var match;\n            while ((match = rgx.exec(color_rgb)) != null) {\n                var inverted = 255 - match[0];\n                if (inverted < 16)\n                    color_hex += \"0\";\n                color_hex += inverted.toString(16);\n            }\n            element_list[i].style.color = color_hex;\n        }\n    }\n    // ---\n    // Description: Returns the font size in em for a specific CSS query\n    // query: the CSS query\n    // ---\n    getEM(query) {\n        return parseFloat(window.getComputedStyle(document.querySelectorAll(query)[0]).getPropertyValue(\"font-size\")) / parseFloat(window.getComputedStyle(document.body).getPropertyValue(\"font-size\"));\n    }\n    // ---\n    // Description: Converts rem to pixel count\n    // rem: the rem input\n    // ---\n    remToPixel(rem) {\n        return parseFloat(window.getComputedStyle(document.body).getPropertyValue(\"font-size\")) * rem;\n    }\n    // ---\n    // Description: Applies a regex to keyboard input, only allowing specific keys\n    // textbox: The textbox to filter.\n    // inputFilter: Function returning the filtered input\n    //              Example: function(value) {return /^\\d*$/.test(value);}\n    // Source: https://jsfiddle.net/emkey08/zgvtjc51\n    // ---\n    setInputFilter(textbox, inputFilter) {\n        [\"input\", \"keydown\", \"keyup\", \"mousedown\", \"mouseup\", \"select\", \"contextmenu\", \"drop\"].forEach(function (event) {\n            textbox.addEventListener(event, function () {\n                if (inputFilter(this.value)) {\n                    this.oldValue = this.value;\n                    this.oldSelectionStart = this.selectionStart;\n                    this.oldSelectionEnd = this.selectionEnd;\n                }\n                else if (this.hasOwnProperty(\"oldValue\")) {\n                    this.value = this.oldValue;\n                    this.setSelectionRange(this.oldSelectionStart, this.oldSelectionEnd);\n                }\n            });\n        });\n    }\n    // ---\n    // Description: Creates an html element from a given input string\n    // htmlstr: The html string\n    // ---\n    htmlParse(htmlstr) {\n        const template = document.createElement(\"div\");\n        template.innerHTML = htmlstr;\n        return template.firstElementChild;\n    }\n    // ---\n    // Description: Insterts an html element at the start of another one\n    // parent: The html element that gets modified\n    // html: The new html element as string\n    // ---\n    prependHtmlString(parent, html) {\n        const view = this.htmlParse(html);\n        parent.insertBefore(view, parent.firstChild);\n        return view;\n    }\n    // ---\n    // Description: Inserts an html element at the end of another one\n    // parent: The html element that gets modified\n    // html: The new html element as string\n    // ---\n    appendHtmlString(parent, html) {\n        const view = this.htmlParse(html);\n        parent.appendChild(view);\n        return view;\n    }\n    // ---\n    // Description: Get the slide with the specified index\n    // index: slide index\n    // ---\n    getSlide(index) {\n        return window.rslidy.content.slideTransition.slides[index];\n    }\n    // ---\n    // Description: True if an element is visible on screen\n    // elm: the html element to check\n    // ---\n    checkVisible(elm) {\n        var rect = elm.getBoundingClientRect();\n        var viewHeight = Math.max(document.documentElement.clientHeight, window.innerHeight);\n        return !(rect.bottom < 0 || rect.top - viewHeight >= 0);\n    }\n}\n","export const all_slides_icon = `<svg viewBox=\"0 0 100 100\"\r  xmlns=\"http://www.w3.org/2000/svg\">\r<line x1=\"5\" y1=\"5\" x2=\"5\" y2=\"95\" style=\"stroke-width:8\"/>\r<line x1=\"95\" y1=\"5\" x2=\"95\" y2=\"95\" style=\"stroke-width:8\"/>\r<text x=\"50\" y=\"50\" dominant-baseline=\"middle\" text-anchor=\"middle\" font-size=\"100\">n</text>\r</svg>`;\nexport const font_minus_icon = `<svg viewBox=\"0 0 100 100\"\r  xmlns=\"http://www.w3.org/2000/svg\">\r<text x=\"50\" y=\"95\" text-anchor=\"middle\" font-size=\"80\">A</text>\r<text x=\"60\" y=\"45\" font-weight=\"bold\" font-size=\"55\">-</text>\r</svg>`;\nexport const font_plus_icon = `<svg viewBox=\"0 0 100 100\"\r  xmlns=\"http://www.w3.org/2000/svg\">\r<text x=\"50\" y=\"95\" text-anchor=\"middle\" font-size=\"100\">A</text>\r<text x=\"55\" y=\"40\" font-weight=\"bold\" font-size=\"55\">+</text>\r</svg>`;\nexport const font_reset_icon = `<svg viewBox=\"0 0 100 100\"\r  xmlns=\"http://www.w3.org/2000/svg\">\r<text x=\"50\" y=\"95\" text-anchor=\"middle\" font-size=\"90\">A</text>\r</svg>`;\nexport const help_icon = `<svg viewBox=\"0 0 100 100\"\r  xmlns=\"http://www.w3.org/2000/svg\">\r<g transform=\"scale(0.7)\">\r<path fill=\"none\" stroke-width=\"20\" d=\"M45,67c0-13 1-19 8-26c7-9 18-10 28-8c10,2 22,12 22,26c0,14-11,19-15,22c-7,2-10,6-11,11v20m0,12v16\"/>\r</g>\r</svg>`;\nexport const hide_icon = `<svg viewBox=\"0 0 100 100\"\r  xmlns=\"http://www.w3.org/2000/svg\">\r<line stroke-linecap=\"round\" x1=\"20\" y1=\"15\" x2=\"50\" y2=\"45\" stroke-width=\"10\"/>\r<line stroke-linecap=\"round\" x1=\"50\" y1=\"45\" x2=\"80\" y2=\"15\" stroke-width=\"10\"/>\r<line stroke-linecap=\"round\" x1=\"20\" y1=\"55\" x2=\"50\" y2=\"85\" stroke-width=\"10\"/>\r<line stroke-linecap=\"round\" x1=\"50\" y1=\"85\" x2=\"80\" y2=\"55\" stroke-width=\"10\"/>\r</svg>`;\nexport const last_icon = `<svg viewBox=\"0 0 100 100\"\r  xmlns=\"http://www.w3.org/2000/svg\">\r<polygon points=\"5,5 5,95 70,50\"\r  stroke-width=\"1\"/>\r<line x1=\"85\" y1=\"5\" x2=\"85\" y2=\"95\" style=\"stroke-width:15\"/>\r</svg>`;\nexport const next_icon = `<svg viewBox=\"0 0 100 100\"\r  xmlns=\"http://www.w3.org/2000/svg\">\r<polygon points=\"15,5 15,95 85,50\"\r  stroke-width=\"1\"/>\r</svg>`;\nexport const next_pointer_icon = `<svg viewBox=\"0 0 100 100\"\r     xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\">\r    <polygon points=\"0,1 0,99 99,50\" fill=\"none\" stroke=\"black\" stroke-width=\"5\"/>\r</svg>`;\nexport const one_slide_icon = `<svg viewBox=\"0 0 100 100\"\r  xmlns=\"http://www.w3.org/2000/svg\">\r<rect x=\"5\" y=\"5\" width=\"90\" height=\"90\" fill=\"none\" style=\"stroke-width:6;\" />\r<text x=\"50\" y=\"50\" dominant-baseline=\"central\" text-anchor=\"middle\" font-size=\"80\">1</text>\r</svg>`;\nexport const overview_icon = `<svg viewBox=\"0 0 100 100\"\r  xmlns=\"http://www.w3.org/2000/svg\">\r<rect x=\"0\" y=\"0\" width=\"100\" height=\"100\" style=\"fill:none;stroke-width:8;\" />\r<line x1=\"48\" y1=\"0\" x2=\"48\" y2=\"100\" style=\"stroke-width:4\"/>\r<rect x=\"8\" y=\"7\" width=\"33\" height=\"25\"/>\r<rect x=\"8\" y=\"37.5\" width=\"33\" height=\"25\"/>\r<rect x=\"8\" y=\"68\" width=\"33\" height=\"25\"/>\r</svg>`;\nexport const previous_pointer_icon = `<svg viewBox=\"0 0 100 100\"\r     xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\">\r    <polygon points=\"99,1 99,99 1,50\" fill=\"none\" stroke=\"black\" stroke-width=\"5\" stroke-linejoin=\"miter\"/>\r</svg>`;\nexport const print_icon = `<svg viewBox=\"0 0 100 100\"\r  xmlns=\"http://www.w3.org/2000/svg\">\r<line x1=\"6\" y1=\"30\" x2=\"94\" y2=\"30\" style=\"stroke-width:8\"/>\r<line x1=\"10\" y1=\"30\" x2=\"10\" y2=\"80\" style=\"stroke-width:8\"/>\r<line x1=\"22\" y1=\"23\" x2=\"30\" y2=\"23\" style=\"stroke-width:8\"/>\r<line x1=\"70\" y1=\"23\" x2=\"78\" y2=\"23\" style=\"stroke-width:8\"/>\r<line x1=\"90\" y1=\"30\" x2=\"90\" y2=\"80\" style=\"stroke-width:8\"/>\r<line x1=\"6\" y1=\"80\" x2=\"30\" y2=\"80\" style=\"stroke-width:8\"/>\r<line x1=\"94\" y1=\"80\" x2=\"70\" y2=\"80\" style=\"stroke-width:8\"/>\r\r<line x1=\"6\" y1=\"33\" x2=\"94\" y2=\"33\" style=\"stroke-width:8\"/>\r<line x1=\"6\" y1=\"40\" x2=\"20\" y2=\"40\" style=\"stroke-width:12\"/>\r<line x1=\"33\" y1=\"40\" x2=\"94\" y2=\"40\" style=\"stroke-width:12\"/>\r<line x1=\"6\" y1=\"55\" x2=\"94\" y2=\"55\" style=\"stroke-width:24\"/>\r<line x1=\"6\" y1=\"75\" x2=\"30\" y2=\"75\" style=\"stroke-width:24\"/>\r<line x1=\"94\" y1=\"75\" x2=\"70\" y2=\"75\" style=\"stroke-width:24\"/>\r\r<line x1=\"35\" y1=\"73\" x2=\"65\" y2=\"73\" style=\"stroke-width:4\"/>\r<line x1=\"35\" y1=\"83\" x2=\"65\" y2=\"83\" style=\"stroke-width:4\"/>\r\r<rect x=\"30\" y=\"5\" width=\"40\" height=\"25\" rx=\"5\" ry=\"5\" style=\"fill:none;stroke-width:4;\"/>\r<rect x=\"30\" y=\"65\" width=\"40\" height=\"30\" rx=\"5\" ry=\"5\" style=\"fill:none;stroke-width:4;\"/>\r</svg>`;\nexport const settings_icon = `<svg viewBox=\"0 0 100 100\"\r  xmlns:xlink=\"http://www.w3.org/1999/xlink\"\r  xmlns=\"http://www.w3.org/2000/svg\">\r<defs>\r<g id=\"gear\">\r<polygon points=\"40,75 43,95 57,95 60,75\"/>\r<polygon points=\"40,25 43,5 57,5 60,25\"/>\r<polygon points=\"25,40 5,43 5,57 25,60\"/>\r<polygon points=\"75,40 95,43 95,57 75,60\"/>\r</g>\r</defs>\r<circle cx=\"50\" cy=\"50\" r=\"25\" fill=\"none\" style=\"stroke-width:15\" />\r<use xlink:href=\"#gear\"/>\r<use xlink:href=\"#gear\" transform=\"rotate(45 50 50)\"/>\r</svg>`;\nexport const slider_icon = `<svg viewBox=\"0 0 100 50\"\r  xmlns=\"http://www.w3.org/2000/svg\">\r<line stroke-linecap=\"round\" x1=\"20\" y1=\"25\" x2=\"80\" y2=\"25\" stroke-width=\"30\"/>\r<circle cx=\"25\" cy=\"25\" r=\"23\" stroke-width=\"3\"/>\r</svg>`;\nexport const toc_icon = `<svg viewBox=\"0 0 100 100\"\r  xmlns=\"http://www.w3.org/2000/svg\">\r<line x1=\"5\" y1=\"10\" x2=\"5\" y2=\"95\" stroke-dasharray=\"15, 15\" style=\"stroke-width:20\"/>\r<line x1=\"25\" y1=\"17.5\" x2=\"100\" y2=\"17.5\" style=\"stroke-width:10\"/>\r<line x1=\"25\" y1=\"47.5\" x2=\"100\" y2=\"47.5\" style=\"stroke-width:10\"/>\r<line x1=\"25\" y1=\"77.5\" x2=\"100\" y2=\"77.5\" style=\"stroke-width:10\"/>\r</svg>`;\n","// English text definitions\nexport const help = [\n    `Interface Controls`,\n    `Function`,\n    `Button`,\n    `Key`,\n    `Gesture`,\n    `Description`,\n    `Slide Overview`,\n    `O`,\n    `Toggle the Overview of all slides.`,\n    `Toolbar`,\n    `T`,\n    `Toggle the visibility of the toolbar.`,\n    `All Slides`,\n    `A`,\n    `Toggle display of all slides on one page.`,\n    `First Slide`,\n    `Home`,\n    `Shake`,\n    `Navigate to first slide.`,\n    `Previous Slide`,\n    `←, Page Up`,\n    `Swipe right, Tap/click left margin, Tilt left, Tip left`,\n    `Navigate to previous slide.`,\n    `Next Slide`,\n    `→, Page Down, Space`,\n    `Swipe left, Tap/click right margin, Tilt right, Tip right`,\n    `Advance to next slide.`,\n    `Last Slide`,\n    `End`,\n    `Navigate to last slide.`,\n    `Print Settings`,\n    `P`,\n    `Toggle the Print Settings Panel.\n   Print settings are preserved in browser local storage.`,\n    `Settings`,\n    `S`,\n    `Toggle the Settings Panel.\n   Settings are preserved in browser local storage.`,\n    `Help`,\n    `H`,\n    `Toggle the Help Panel.`,\n    `Table of Contents`,\n    `C`,\n    `Toggle the Table of Contents (slide titles).`,\n    `Decrease Font Size`,\n    `-`,\n    `Decrease slide font size.\n   With Shift, decrease interface font size.`,\n    `Reset Font Size`,\n    `R`,\n    `Reset slide font size.\n   With Shift, reset interface font size.`,\n    `Increase Font Size`,\n    `+`,\n    `Increase slide font size.\n   With Shift, increase interface font size.`,\n    `Jump to Slide`,\n    `[J] 0-99 Return`,\n    `Jump to a specific slide.`,\n    `Close all Panels`,\n    `Escape`,\n    `Close all open panels.`,\n];\nexport const settings = [\n    `Tilt`,\n    `Shake`,\n    `Space To Advance`,\n    `Margin Tap Nav`,\n    `Low Light Mode`,\n    `Slide Fonts`,\n    `UI Fonts`,\n    `Make Slide Fonts Smaller (-)`,\n    `Reset Slide Fonts (R)`,\n    `Make Slide Fonts Larger (+)`,\n    `Make UI Fonts Smaller (Shift -)`,\n    `Reset UI Fonts (Shift R)`,\n    `Make UI Fonts Larger (Shift +)`\n];\nexport const print_settings = [\n    `Show Slide Numbers`,\n    `Show Frame`,\n    `Show Link Destinations`,\n    `Sildes to Print:`,\n    `Font Size:`,\n    `Orientation:`,\n    `Page Size:`,\n    `Print`,\n];\nexport const toolbar = [\n    `Show Toolbar (T)`,\n    `Slide Overview (O)`,\n    `Hide Toolbar (T)`,\n    `First Slide (Home)`,\n    `Previous Slide (←)`,\n    `Next Slide (→)`,\n    `Last Slide (End)`,\n    `Table of Contents (C)`,\n    `Settings (S)`,\n    `Print (P)`,\n    `Help (H)`,\n    `Display All Slides (A)`,\n    `Display Single Slides (A)`\n];\nexport const imageviewer = [\n    `Reset Zoom (R)`,\n    `Zoom In (+)`,\n    `Zoom Out (-)`,\n    `Close (Esc)`\n];\n","import * as i from \"./icon-definitions\";\nimport * as t from \"./text.en\";\nexport const spinner_html = `\n<div id=\"rslidy-spinner\" class=\"rslidy-spinner-overlay\">\n<div class=\"rslidy-spinner\"></div></div>`;\nexport const help_text = `\n<div id=\"rslidy-help\" class=\"rslidy-help-overlay rslidy-ui\"\nrole=\"region\" aria-label=\"Help\" tabindex=\"0\">\n  <div id=\"rslidy-help-popup\">\n  <h1>\n    Rslidy Version 1.0.1\n    <a target=\"_blank\" href=\"https://github.com/tugraz-isds/rslidy\">GitHub</a>\n  </h1>\n  <a class=\"rslidy-help-close\" title=\"` + t.imageviewer[3] + `\" href=\"#\">&times;</a>\n  <h2>` + t.help[0] + `</h2>\n    <div class=\"rslidy-help-content\">\n    <table id=\"rslidy-help-table\">\n      <tr>\n        <th>` + t.help[1] + `</th>\n        <th>` + t.help[2] + `</th>\n        <th>` + t.help[3] + `</th>\n        <th>` + t.help[4] + `</th>\n        <th>` + t.help[5] + `</th>\n      </tr>\n      <tr>\n        <td>` + t.help[6] + `</td>\n        <td>\n          <span class=\"rslidy-icon\">` + i.overview_icon + `</span>\n        </td>\n        <td>` + t.help[7] + `</td>\n        <td></td>\n        <td>` + t.help[8] + `</td>\n      </tr>\n      <tr>\n        <td>` + t.help[9] + `</td>\n        <td>\n          <span class=\"rslidy-icon\">` + i.hide_icon + `</span>\n        </td>\n        <td>` + t.help[10] + `</td>\n        <td></td>\n        <td>` + t.help[11] + `</td>\n      </tr>\n      <tr>\n        <td>` + t.help[12] + `</td>\n        <td>\n          <span class=\"rslidy-icon\">` + i.all_slides_icon + `</span>\n          <span class=\"rslidy-icon\">` + i.one_slide_icon + `</span>\n        </td>\n        <td>` + t.help[13] + `</td>\n        <td></td>\n        <td>` + t.help[14] + `</td>\n      </tr>\n      <tr>\n        <td>` + t.help[15] + `</td>\n        <td>\n          <span class=\"rslidy-icon rslidy-mirror\">` + i.last_icon + `</span>\n        </td>\n        <td>` + t.help[16] + `</td>\n        <td>` + t.help[17] + `</td>\n        <td>` + t.help[18] + `</td>\n      </tr>\n      <tr>\n        <td>` + t.help[19] + `</td>\n        <td>\n          <span class=\"rslidy-icon rslidy-mirror\">` + i.next_icon + `</span>\n        </td>\n        <td>` + t.help[20] + `</td>\n        <td>` + t.help[21] + `</td>\n        <td>` + t.help[22] + `</td>\n      </tr>\n      <tr>\n        <td>` + t.help[23] + `</td>\n        <td>\n          <span class=\"rslidy-icon\">` + i.next_icon + `</span>\n        </td>\n        <td>` + t.help[24] + `</td>\n        <td>` + t.help[25] + `</td>\n        <td>` + t.help[26] + `</td>\n      </tr>\n      <tr>\n        <td>` + t.help[27] + `</td>\n        <td>\n          <span class=\"rslidy-icon\">` + i.last_icon + `</span>\n        </td>\n        <td>` + t.help[28] + `</td>\n        <td></td>\n        <td>` + t.help[29] + `</td>\n      </tr>\n      <tr>\n        <td>` + t.help[30] + `</td>\n        <td>\n          <span class=\"rslidy-icon\">` + i.print_icon + `</span>\n        </td>\n        <td>` + t.help[31] + `</td>\n        <td></td>\n        <td>` + t.help[32] + `</td>\n      </tr>\n      <tr>\n        <td>` + t.help[33] + `</td>\n        <td>\n          <span class=\"rslidy-icon\">` + i.settings_icon + `</span>\n        </td>\n        <td>` + t.help[34] + `</td>\n        <td></td>\n        <td>` + t.help[35] + `</td>\n      </tr>\n      <tr>\n        <td>` + t.help[36] + `</td>\n        <td>\n          <span class=\"rslidy-icon\">` + i.help_icon + `</span>\n        </td>\n        <td>` + t.help[37] + `</td>\n        <td></td>\n        <td>` + t.help[38] + `</td>\n      </tr>\n      <tr>\n        <td>` + t.help[39] + `</td>\n        <td>\n          <span class=\"rslidy-icon\">` + i.toc_icon + `</span>\n        </td>\n        <td>` + t.help[40] + `</td>\n        <td></td>\n        <td>` + t.help[41] + `</td>\n      </tr>\n      <tr>\n        <td>` + t.help[42] + `</td>\n        <td>\n          <span class=\"rslidy-icon\">` + i.font_minus_icon + `</span>\n        </td>\n        <td>` + t.help[43] + `</td>\n        <td></td>\n        <td>` + t.help[44] + `</td>\n      </tr>\n      <tr>\n        <td>` + t.help[45] + `</td>\n        <td>\n          <span class=\"rslidy-icon\">` + i.font_reset_icon + `</span>\n        </td>\n        <td>` + t.help[46] + `</td>\n        <td></td>\n        <td>` + t.help[47] + `</td>\n      </tr>\n      <tr>\n        <td>` + t.help[48] + `</td>\n        <td>\n          <span class=\"rslidy-icon\">` + i.font_plus_icon + `</span>\n        </td>\n        <td>` + t.help[49] + `</td>\n        <td></td>\n        <td>` + t.help[50] + `</td>\n      </tr>\n      <tr>\n        <td>` + t.help[51] + `</td>\n        <td></td>\n        <td>` + t.help[52] + `</td>\n        <td></td>\n        <td>` + t.help[53] + `</td>\n      </tr>\n      <tr>\n        <td>` + t.help[54] + `</td>\n        <td></td>\n        <td>` + t.help[55] + `</td>\n        <td></td>\n        <td>` + t.help[56] + `</td>\n      </tr>\n    </table>\n    </div>\n  </div>\n</div>`;\nexport const content_section = `\n<div id=\"rslidy-row-flex\" aria-label=\"Rslidy slide deck, press h for help\">\n  <nav id=\"rslidy-overview-slides\" class=\"rslidy-ui\" tabindex=\"0\" aria-label=\"slide overview\"></nav>\n  <main id=\"rslidy-content-section\" role=\"region\" aria-label=\"Slides\">\n    <div id=\"rslidy-trapezoid-wrapper-display\" class=\"rslidy-ui\">\n      <div id=\"rslidy-tb-display-trapezoid\">\n        <button id=\"rslidy-button-current\" class=\"rslidy-display-button\" title=\"` + t.toolbar[12] + `\">\n          <span class=\"rslidy-tb-button rslidy-tb-display\">` + i.one_slide_icon + `</span>\n        </button>\n      </div>\n    </div>\n  </main>\n  <nav id=\"rslidy-overview-toc\" class=\"rslidy-ui\" tabindex=\"0\" aria-label=\"table of contents\"></nav>\n</div>`;\nexport const notes_text = `\n<div id=\"rslidy-speakernotes-overlay\"></div>`;\nexport const image_viewer = `\n<div class=\"rslidy-image-viewer rslidy-ui\">\n  <div class=\"rslidy-image-viewer-container\">\n    <img draggable=\"false\" class=\"rslidy-image-viewer-content\">\n  </div>\n\n  <span title=\"` + t.imageviewer[0] + `\" class=\"rslidy-iv-button rslidy-iv-zoom-reset\">\n    &#x25A2;\n  </span>\n  <span title=\"` + t.imageviewer[1] + `\" class=\"rslidy-iv-button rslidy-iv-zoom-in\">\n    &plus;\n  </span>\n  <span title=\"` + t.imageviewer[2] + `\" class=\"rslidy-iv-button rslidy-iv-zoom-out\">\n    &minus;\n  </span>\n  <span title=\"` + t.imageviewer[3] + `\" class=\"rslidy-iv-button rslidy-iv-close\">\n    &times;\n  </span>\n</div>`;\nexport const thumbnail_html = (idx, xofy, slide, suffix) => `\n<div class=\"rslidy-slide-thumbnail${suffix}\" data-slideindex=\"${idx}\" role=\"region\">\n<div class=\"rslidy-thumbnail-caption rslidy-noselect\"><a class=\"rslidy-slide-link\" aria-label=\"Slide ${xofy}\" data-slideindex=\"${idx}\" href=\"#${idx + 1}\">${xofy}</a></div>\n  <div class=\"rslidy-slide-clickelement\" data-slideindex=\"${idx}\">\n    <div class=\"rslidy-overview-item${suffix} rslidy-noselect\" data-slideindex=\"${idx}\">${slide}</div>\n  </div>\n</div>`;\nexport const link_html = (idx, title) => `\n<div class=\"rslidy-slide-link\" data-slideindex=\"${idx}\"><a href=\"#${idx + 1}\">${title}</a></div>`;\nexport const preview_html = (idx) => `\n<div class=\"rslidy-preview\" data-slideindex=\"${idx}\">\n  <div class=\"rslidy-preview-item\"></div>\n</div>`;\nexport const settings_html = `\n<div id=\"rslidy-menu\" class=\"rslidy-hidden rslidy-ui\" role=\"region\"\naria-label=\"Settings\" tabindex=\"0\">\n  <label id=\"rslidy-checkbox-tilt-text\" class=\"rslidy-menu-content-settings rslidy-disabled\" aria-disabled=\"true\">\n    ` + t.settings[0] + `\n    <input type=\"checkbox\" value=\"Tilt\" id=\"rslidy-checkbox-tilt\" disabled>\n    <label for=\"rslidy-checkbox-tilt\">` + i.slider_icon + `</label>\n  </label>\n  <label id=\"rslidy-checkbox-shake-text\" class=\"rslidy-menu-content-settings rslidy-disabled\" aria-disabled=\"true\">\n    ` + t.settings[1] + `\n    <input type=\"checkbox\" value=\"Shake\" id=\"rslidy-checkbox-shake\" disabled>\n    <label for=\"rslidy-checkbox-shake\">` + i.slider_icon + `</label>\n  </label>\n  <label id=\"rslidy-checkbox-space-text\" class=\"rslidy-menu-content-settings\">\n    ` + t.settings[2] + `\n    <input type=\"checkbox\" value=\"Tap\" id=\"rslidy-checkbox-space\" checked>\n    <label for=\"rslidy-checkbox-space\">` + i.slider_icon + `</label>\n  </label>\n  <label id=\"rslidy-checkbox-margintap-text\" class=\"rslidy-menu-content-settings\">\n    ` + t.settings[3] + `\n    <input type=\"checkbox\" value=\"Tap\" id=\"rslidy-checkbox-margintap\" checked>\n    <label for=\"rslidy-checkbox-margintap\">` + i.slider_icon + `</label>\n  </label>\n  <label id=\"rslidy-checkbox-lowlight-text\" class=\"rslidy-menu-content-settings\">\n    ` + t.settings[4] + `\n    <input type=\"checkbox\" value=\"Low Light Mode\" id=\"rslidy-checkbox-lowlightmode\">\n    <label for=\"rslidy-checkbox-lowlightmode\">` + i.slider_icon + `</label>\n  </label>\n  <div class=\"rslidy-menu-content-settings\">\n    <label>` + t.settings[5] + `</label>\n    <a href=\"#\" title=\"` + t.settings[7] + `\" id=\"rslidy-button-font-minus\"><span class=\"rslidy-menu-button\">` + i.font_minus_icon + `</span></a>\n    <a href=\"#\" title=\"` + t.settings[8] + `\" id=\"rslidy-button-font-reset\"><span class=\"rslidy-menu-button\">` + i.font_reset_icon + `</span></a>\n    <a href=\"#\" title=\"` + t.settings[9] + `\" id=\"rslidy-button-font-plus\"><span class=\"rslidy-menu-button\">` + i.font_plus_icon + `</span></a>\n  </div>\n  <div class=\"rslidy-menu-content-settings\">\n    <label>` + t.settings[6] + `</label>\n    <a href=\"#\" title=\"` + t.settings[10] + `\" id=\"rslidy-button-font-minus-ui\"><span class=\"rslidy-menu-button\">` + i.font_minus_icon + `</span></a>\n    <a href=\"#\" title=\"` + t.settings[11] + `\" id=\"rslidy-button-font-reset-ui\"><span class=\"rslidy-menu-button\">` + i.font_reset_icon + `</span></a>\n    <a href=\"#\" title=\"` + t.settings[12] + `\" id=\"rslidy-button-font-plus-ui\"><span class=\"rslidy-menu-button\">` + i.font_plus_icon + `</span></a>\n  </div>\n</div>`;\nexport const print_settings_html = `\n<div id=\"rslidy-print-menu\" class=\"rslidy-hidden rslidy-ui\"\nrole=\"region\" aria-label=\"Print Settings\" tabindex=\"0\">\n  <label id=\"rslidy-checkbox-snum-text\" class=\"rslidy-menu-content\">\n    ` + t.print_settings[0] + `\n    <input type=\"checkbox\" value=\"Numbers\" id=\"rslidy-checkbox-snum\">\n    <label for=\"rslidy-checkbox-snum\">` + i.slider_icon + `</label>\n  </label>\n  <label id=\"rslidy-checkbox-frame-text\" class=\"rslidy-menu-content\">\n    ` + t.print_settings[1] + `\n    <input type=\"checkbox\" value=\"Numbers\" id=\"rslidy-checkbox-frame\">\n    <label for=\"rslidy-checkbox-frame\">` + i.slider_icon + `</label>\n  </label>\n  <label id=\"rslidy-checkbox-link-text\" class=\"rslidy-menu-content\">\n    ` + t.print_settings[2] + `\n    <input type=\"checkbox\" value=\"Links\" id=\"rslidy-checkbox-link\">\n    <label for=\"rslidy-checkbox-link\">` + i.slider_icon + `</label>\n  </label>\n <fieldset id=\"rslidy-slide-print-options\">` + t.print_settings[3] + `\n    <label class=\"rslidy-print-slides\">\n      <input type=\"radio\" name=\"slide-print-option\" value=\"all\" checked class=\"rslidy-print-slide-input\"> All\n    </label>\n    <label class=\"rslidy-print-slides\">\n      <input type=\"radio\" name=\"slide-print-option\" value=\"current\" class=\"rslidy-print-slide-input\"> Current\n    </label>\n    <label class=\"rslidy-print-slides\">\n      <input type=\"radio\" name=\"slide-print-option\" value=\"custom\" class=\"rslidy-print-slide-input\"> Slides:\n      <input type=\"text\" id=\"rslidy-slide-range-input\" placeholder=\"1-5,8,10\" disabled style=\"width: 4rem;\">\n    </label>\n  </fieldset>\n  <label id=\"rslidy-input-font-size-text\" class=\"rslidy-menu-content\">\n    ` + t.print_settings[4] + `\n    <input type=\"number\" id=\"rslidy-input-font-size\" value=\"100\" min=\"0\" max=\"100\">\n  <span class=\"percent\">%</span>\n  </label>\n  <label id=\"rslidy-select-orientation-text\" class=\"rslidy-menu-content\">\n    ` + t.print_settings[5] + `\n    <select id=\"rslidy-select-orientation\">\n      <option value=\"portrait\">Portrait</option>\n      <option selected=\"selected\" value=\"landscape\">Landscape</option>\n    </select>\n  </label>\n   <label id=\"rslidy-select-paper-size-text\" class=\"rslidy-menu-content\">\n    ` + t.print_settings[6] + `\n    <select id=\"rslidy-select-paper-size\">\n    <option value=\"216mm 356mm\">Legal</option>\n    <option value=\"216mm 279mm\">Letter</option>\n    <option value=\"279mm 432mm\">Tabloid</option>\n    <option value=\"841mm 1189mm\">A0</option>\n    <option value=\"594mm 841mm\">A1</option>\n    <option value=\"420mm 594mm\">A2</option>\n    <option value=\"297mm 420mm\">A3</option>\n    <option selected=\"selected\" value=\"210mm 297mm\">A4</option>\n    <option value=\"148mm 210mm\">A5</option>\n    </select>\n  </label>\n  <fieldset id=\"rslidy-exclusive-checkboxes\" style=\"margin-top: 1.5em;\">\n  <h4 style=\"margin-bottom: 1.5em;\">Print Sizing</h4>\n   <label id=\"rslidy-checkbox-actual-size-text\" class=\"rslidy-print-sizing\">\n      <input type=\"radio\" name=\"print-options\" value=\"actual\" id=\"rslidy-checkbox-actual\" class=\"print-checkbox\" checked> Actual Size\n    </label>\n    <br>\n    <label id=\"rslidy-checkbox-scale-text\" class=\"rslidy-print-sizing\">\n      <input type=\"radio\" name=\"print-options\" value=\"fit\" id=\"rslidy-checkbox-fit\" class=\"print-checkbox\"> Fit\n    </label>\n    <br>\n    <label id=\"rslidy-checkbox-scale-text\" class=\"rslidy-print-sizing\">\n      <input type=\"radio\" name=\"print-options\" value=\"shrink\" id=\"rslidy-checkbox-fit\" class=\"print-checkbox\"> Shrink\n    </label>\n    <br>\n    <label id=\"rslidy-checkbox-shrink-text\" class=\"rslidy-print-sizing\">\n      <input type=\"radio\" name=\"print-options\" value=\"fit-width\" id=\"rslidy-checkbox-shrink\" class=\"print-checkbox\"> Fit to Width\n    </label>\n    <br>\n    <label id=\"rslidy-checkbox-custom-text\" class=\"rslidy-print-sizing\">\n      <input type=\"radio\" name=\"print-options\" value=\"custom\" id=\"rslidy-checkbox-custom\" class=\"print-checkbox\"> Custom Scale:\n      <input type=\"number\" id=\"custom-scaling-input\" value=\"100\" class=\"scaling-input\" min=\"1\" max=\"100\" disabled placeholder=\"100\">\n      <span class=\"percent\">%</span>\n    </label>\n    <div id=\"rslidy-transform-origin-subsection\">\n  <h4>Position of Page:</h4>\n  <div class=\"button-container\">\n    <label class=\"rslidy-print-position\" data-tooltip=\"Top Left\">\n      <input type=\"radio\" name=\"transform-origin\" value=\"top left\" class=\"print-checkbox\">\n      <svg width=\"25\" height=\"25\" viewBox=\"0 0 25 25\">\n        <rect width=\"25\" height=\"25\" fill=\"grey\" />\n        <circle cx=\"5\" cy=\"5\" r=\"3.5\" fill=\"lightblue\" />\n      </svg>\n    </label>\n\n    <label class=\"rslidy-print-position\" data-tooltip=\"Top Center\">\n      <input type=\"radio\" name=\"transform-origin\" value=\"top center\" class=\"print-checkbox\">\n      <svg width=\"25\" height=\"25\" viewBox=\"0 0 25 25\">\n        <rect width=\"25\" height=\"25\" fill=\"grey\" />\n        <circle cx=\"12.5\" cy=\"5\" r=\"3.5\" fill=\"lightblue\" />\n      </svg>\n    </label>\n\n    <label class=\"rslidy-print-position\" data-tooltip=\"Top Right\">\n      <input type=\"radio\" name=\"transform-origin\" value=\"top right\" class=\"print-checkbox\">\n      <svg width=\"25\" height=\"25\" viewBox=\"0 0 25 25\">\n        <rect width=\"25\" height=\"25\" fill=\"grey\" />\n        <circle cx=\"20\" cy=\"5\" r=\"3.5\" fill=\"lightblue\" />\n      </svg>\n    </label>\n  </div>\n      <div class=\"button-container\">\n        <label class=\"rslidy-print-position\" data-tooltip=\"Center Left\">\n          <input type=\"radio\" name=\"transform-origin\" value=\"center left\" class=\"print-checkbox\">\n          <svg width=\"25\" height=\"25\" viewBox=\"0 0 25 25\">\n            <rect width=\"25\" height=\"25\" fill=\"grey\" />\n            <circle cx=\"5\" cy=\"12.5\" r=\"3.5\" fill=\"lightblue\" />\n          </svg>\n        </label>\n    \n        <label class=\"rslidy-print-position\" data-tooltip=\"Center Center\">\n          <input type=\"radio\" name=\"transform-origin\" value=\"center\" class=\"print-checkbox\" checked>\n          <svg width=\"25\" height=\"25\" viewBox=\"0 0 25 25\">\n            <rect width=\"25\" height=\"25\" fill=\"grey\" />\n            <circle cx=\"12.5\" cy=\"12.5\" r=\"3.5\" fill=\"lightblue\" />\n          </svg>\n        </label>\n    \n        <label class=\"rslidy-print-position\" data-tooltip=\"Center Right\">\n          <input type=\"radio\" name=\"transform-origin\" value=\"center right\" class=\"print-checkbox\">\n          <svg width=\"25\" height=\"25\" viewBox=\"0 0 25 25\">\n            <rect width=\"25\" height=\"25\" fill=\"grey\" />\n            <circle cx=\"20\" cy=\"12.5\" r=\"3.5\" fill=\"lightblue\" />\n          </svg>\n        </label>\n      </div>\n    \n      <div class=\"button-container\">\n        <label class=\"rslidy-print-position\" data-tooltip=\"Bottom Left\">\n          <input type=\"radio\" name=\"transform-origin\" value=\"left bottom\" class=\"print-checkbox\">\n          <svg width=\"25\" height=\"25\" viewBox=\"0 0 25 25\">\n            <rect width=\"25\" height=\"25\" fill=\"grey\" />\n            <circle cx=\"5\" cy=\"20\" r=\"3.5\" fill=\"lightblue\" />\n          </svg>\n        </label>\n    \n        <label class=\"rslidy-print-position\" data-tooltip=\"Bottom Center\">\n          <input type=\"radio\" name=\"transform-origin\" value=\"center bottom\" class=\"print-checkbox\">\n          <svg width=\"25\" height=\"25\" viewBox=\"0 0 25 25\">\n            <rect width=\"25\" height=\"25\" fill=\"grey\" />\n            <circle cx=\"12.5\" cy=\"20\" r=\"3.5\" fill=\"lightblue\" />\n          </svg>\n        </label>\n    \n        <label class=\"rslidy-print-position\" data-tooltip=\"Bottom Right\">\n          <input type=\"radio\" name=\"transform-origin\" value=\"right bottom\" class=\"print-checkbox\">\n          <svg width=\"25\" height=\"25\" viewBox=\"0 0 25 25\">\n            <rect width=\"25\" height=\"25\" fill=\"grey\" />\n            <circle cx=\"20\" cy=\"20\" r=\"3.5\" fill=\"lightblue\" />\n          </svg>\n        </label>\n      </div>\n    </div>\n  </fieldset>\n  <div class=\"rslidy-menu-content\">\n    <button id=\"rslidy-button-print-submit\">` + t.print_settings[7] + `</button>\n  </div>\n</div>`;\nexport const toolbar_html = `\n<div id=\"rslidy-footer\" class=\"rslidy-ui\">\n  <div id=\"rslidy-progress-bar-area\">\n    <div id=\"rslidy-trapezoid-wrapper\">\n      <div id=\"rslidy-tb-show-trapezoid\" class=\"rslidy-hidden\">\n        <button id=\"rslidy-button-show\" class=\"rslidy-show-button\" title=\"` + t.toolbar[0] + `\">\n          <i class=\"rslidy-tb-button rslidy-tb-show\">` + i.hide_icon + `</i>\n        </button>\n      </div>\n    </div>\n    <div id=\"rslidy-progress-bar\"></div>\n    <div id=\"rslidy-progress-bar-bg\"></div>\n    <div id=\"rslidy-progress-bar-nubs\"></div>\n  </div>\n  <div id=\"rslidy-toolbar-area\">\n    <div id=\"rslidy-toolbar\" role=\"region\" aria-label=\"Toolbar\">\n      <div id=\"rslidy-toolbar-content\">\n        <div class=\"rslidy-float-left\">\n          <button id=\"rslidy-button-overview\" aria-expanded=\"false\" class=\"rslidy-toolbar-button\" title=\"` + t.toolbar[1] + `\">\n            <i class=\"rslidy-tb-button\">` + i.overview_icon + `</i>\n          </button>\n          <button id=\"rslidy-button-hide\" class=\"rslidy-toolbar-button\" title=\"` + t.toolbar[2] + `\">\n            <i class=\"rslidy-tb-button\">` + i.hide_icon + `</i>\n          </button>\n          <button id=\"rslidy-button-all\" class=\"rslidy-toolbar-button\" title=\"` + t.toolbar[11] + `\">\n            <span class=\"rslidy-tb-button\">` + i.all_slides_icon + `</span>\n          </button>\n        </div>\n\n        <div id=\"rslidy-toolbar-button-nav\">\n          <button id=\"rslidy-button-first\" class=\"rslidy-toolbar-button\" title=\"` + t.toolbar[3] + `\">\n              <i class=\"rslidy-tb-button rslidy-mirror\">` + i.last_icon + `</i>\n          </button>\n\n          <button id=\"rslidy-button-previous\" class=\"rslidy-toolbar-button\" title=\"` + t.toolbar[4] + `\">\n              <i class=\"rslidy-tb-button rslidy-mirror\">` + i.next_icon + `</i>\n          </button>\n          <div class=\"rslidy-toolbar-slide\"><input value=\"1\" id=\"rslidy-slide-input\" type=\"textbox\" aria-label=\"Jump to slide\" maxlength=\"3\"></div>\n          <div class=\"rslidy-toolbar-slide\" id=\"rslidy-slide-caption\"></div>\n          <button id=\"rslidy-button-next\" class=\"rslidy-toolbar-button\"  title=\"` + t.toolbar[5] + `\">\n              <i class=\"rslidy-tb-button\">` + i.next_icon + `</i>\n          </button>\n          <button id=\"rslidy-button-last\" class=\"rslidy-toolbar-button\" title=\"` + t.toolbar[6] + `\">\n              <i class=\"rslidy-tb-button\">` + i.last_icon + `</i>\n          </button>\n        </div>\n\n        <div class=\"rslidy-float-right\">\n          <button id=\"rslidy-button-print\" aria-expanded=\"false\" class=\"rslidy-toolbar-button\" title=\"` + t.toolbar[9] + `\">\n            <i class=\"rslidy-tb-button\">` + i.print_icon + `</i>\n          </button>\n          <button id=\"rslidy-button-menu\" aria-expanded=\"false\" class=\"rslidy-toolbar-button\" title=\"` + t.toolbar[8] + `\">\n            <i class=\"rslidy-tb-button\">` + i.settings_icon + `</i>\n          </button>\n          <button id=\"rslidy-button-help\" class=\"rslidy-toolbar-button\" title=\"` + t.toolbar[10] + `\">\n            <i class=\"rslidy-tb-button\">` + i.help_icon + `</i>\n          </button>\n          <button id=\"rslidy-button-toc\" aria-expanded=\"false\" class=\"rslidy-toolbar-button\" title=\"` + t.toolbar[7] + `\">\n            <i class=\"rslidy-tb-button\">` + i.toc_icon + `</i>\n          </button>\n        </div>\n\n        <div class=\"rslidy-float-right\" id=\"rslidy-timer\">00:00</div>\n      </div>\n    </div>\n  </div>\n</div>`;\n","import { settings_html } from \"./html-definitions\";\nexport class SettingsComponent {\n    constructor() {\n        this.slidefont = 0;\n        this.uifont = 0;\n        this.view =\n            window.rslidy.utils.prependHtmlString(document.body, settings_html);\n        // Parse default font sizes, in case the slide creator changes them\n        this.default = window.rslidy.utils.getEM(\"#rslidy-content-section .slide\");\n        this.default_ui = window.rslidy.utils.getEM(\".rslidy-ui\");\n        this.default_footer = window.rslidy.utils.getEM(\"#rslidy-footer\");\n        this.view\n            .querySelector(\"#rslidy-button-font-plus\")\n            .addEventListener(\"click\", e => this.changeSlideFont(e, 1));\n        this.view\n            .querySelector(\"#rslidy-button-font-reset\")\n            .addEventListener(\"click\", e => this.changeSlideFont(e, 0));\n        this.view\n            .querySelector(\"#rslidy-button-font-minus\")\n            .addEventListener(\"click\", e => this.changeSlideFont(e, -1));\n        this.view\n            .querySelector(\"#rslidy-button-font-plus-ui\")\n            .addEventListener(\"click\", e => this.changeUIFont(e, 1));\n        this.view\n            .querySelector(\"#rslidy-button-font-reset-ui\")\n            .addEventListener(\"click\", e => this.changeUIFont(e, 0));\n        this.view\n            .querySelector(\"#rslidy-button-font-minus-ui\")\n            .addEventListener(\"click\", e => this.changeUIFont(e, -1));\n        this.view\n            .querySelector(\"#rslidy-checkbox-tilt\")\n            .addEventListener(\"click\", e => window.rslidy.toolbar.closeMenuOnSelection());\n        this.view\n            .querySelector(\"#rslidy-checkbox-shake\")\n            .addEventListener(\"click\", e => window.rslidy.toolbar.closeMenuOnSelection());\n        this.view\n            .querySelector(\"#rslidy-checkbox-space\")\n            .addEventListener(\"click\", e => window.rslidy.toolbar.closeMenuOnSelection());\n        this.view\n            .querySelector(\"#rslidy-checkbox-margintap\")\n            .addEventListener(\"click\", e => window.rslidy.toolbar.closeMenuOnSelection());\n        this.view\n            .querySelector(\"#rslidy-checkbox-lowlightmode\")\n            .addEventListener(\"click\", e => window.rslidy.toolbar.closeMenuOnSelection(() => window.rslidy.toggleLowLightMode()));\n    }\n    // ---\n    // Description: Load settings from the localStorage\n    // ---\n    loadSettings() {\n        try {\n            var item = localStorage.getItem(\"rslidy\");\n        }\n        catch (e) {\n            console.log(e);\n            return;\n        }\n        if (item === null || item === undefined)\n            return;\n        var data = JSON.parse(item);\n        if (data.slidefont != undefined)\n            while (data.slidefont != this.slidefont)\n                this.changeSlideFont(null, data.slidefont > 0 ? 1 : -1);\n        if (data.uifont != undefined)\n            while (data.uifont != this.uifont)\n                this.changeUIFont(null, data.uifont > 0 ? 1 : -1);\n        this.view.querySelector(\"#rslidy-checkbox-tilt\").checked = data.tilt;\n        this.view.querySelector(\"#rslidy-checkbox-shake\").checked = data.shake;\n        this.view.querySelector(\"#rslidy-checkbox-space\").checked = data.space;\n        this.view.querySelector(\"#rslidy-checkbox-margintap\").checked = data.margintap;\n        this.view.querySelector(\"#rslidy-checkbox-lowlightmode\").checked = data.lowlightmode;\n        if (data.lowlightmode)\n            window.rslidy.toggleLowLightMode();\n    }\n    // ---\n    // Description: Save settings to the localStorage\n    // ---\n    saveSettings() {\n        try {\n            localStorage.removeItem(\"rslidy\");\n            localStorage.setItem(\"rslidy\", this.generateJSON());\n        }\n        catch (e) {\n            console.log(e);\n        }\n    }\n    // ---\n    // Description: Generate a JSON string for the localStorage\n    // ---\n    generateJSON() {\n        const data = {\n            slidefont: this.slidefont,\n            uifont: this.uifont,\n            tilt: this.view.querySelector(\"#rslidy-checkbox-tilt\").checked,\n            shake: this.view.querySelector(\"#rslidy-checkbox-shake\").checked,\n            space: this.view.querySelector(\"#rslidy-checkbox-space\").checked,\n            margintap: this.view.querySelector(\"#rslidy-checkbox-margintap\").checked,\n            lowlightmode: this.view.querySelector(\"#rslidy-checkbox-lowlightmode\").checked\n        };\n        return JSON.stringify(data);\n    }\n    // ---\n    // Description: Used for final style adaptions.\n    // ---\n    doCustomSettingAdaptions() {\n        // Start in night mode if set or user prefers it\n        // Currently low light mode is broken in firefox mobile\n        // filter:invert() causes the page to overflow\n        // add \"|| window.matchMedia(\"(prefers-color-scheme: dark)\").matches\"\n        // to auto-enable low light mode once its fixed\n        if (window.rslidy.start_in_low_light_mode) {\n            var lowlightbtn = document.getElementById(\"rslidy-checkbox-lowlightmode\");\n            if (!lowlightbtn.checked) {\n                window.rslidy.toggleLowLightMode();\n                lowlightbtn.checked = true;\n            }\n        }\n        // Block slide text selection if set\n        if (window.rslidy.block_slide_text_selection) {\n            var content_section = document.getElementById(\"rslidy-content-section\");\n            var original_slides = content_section.getElementsByClassName(\"slide\");\n            for (var i = 0; i < original_slides.length; i++)\n                original_slides[i].classList.add(\"rslidy-noselect\");\n        }\n    }\n    // ---\n    // Description: Called whenever one of the text size buttons is clicked.\n    // e: The event.\n    // value: Specifies the size modifier (1 = more, -1 = less).\n    // ---\n    changeSlideFont(e, value) {\n        if (value == 0)\n            this.slidefont = 0;\n        else\n            this.slidefont += value;\n        var slides_large = document.querySelectorAll(\"#rslidy-content-section .slide\");\n        for (var i = 0; i < slides_large.length; i++) {\n            if (value == 0)\n                slides_large[i].style.fontSize = this.default + \"em\";\n            var current_font_size = parseFloat(slides_large[i].style.fontSize);\n            if ((current_font_size > window.rslidy.min_slide_font && value == -1) ||\n                (current_font_size < window.rslidy.max_slide_font && value == 1))\n                slides_large[i].style.fontSize =\n                    current_font_size + window.rslidy.font_step * value + \"em\";\n            else if (isNaN(current_font_size))\n                slides_large[i].style.fontSize =\n                    this.default + window.rslidy.font_step * value + \"em\";\n        }\n        // Prevent default actions after event handling\n        if (e)\n            e.preventDefault();\n    }\n    // ---\n    // Description: Called whenever one of the text size buttons is clicked.\n    // e: The event.\n    // value: Specifies the size modifier (1 = more, -1 = less).\n    // ---\n    changeUIFont(e, value) {\n        if (value == 0)\n            this.uifont = 0;\n        else\n            this.uifont += value;\n        var ui = document.querySelectorAll(\".rslidy-ui\");\n        var footer = document.querySelector(\"#rslidy-footer\");\n        for (var i = 0; i < ui.length; i++) {\n            if (value == 0)\n                ui[i].style.fontSize = this.default_ui + \"em\";\n            var current_font_size = parseFloat(ui[i].style.fontSize);\n            if ((current_font_size > window.rslidy.min_slide_font && value == -1) ||\n                (current_font_size < window.rslidy.max_slide_font && value == 1))\n                ui[i].style.fontSize =\n                    current_font_size + window.rslidy.font_step * value + \"em\";\n            else if (isNaN(current_font_size))\n                ui[i].style.fontSize =\n                    this.default_ui + window.rslidy.font_step * value + \"em\";\n        }\n        // Prevent footer from overflowing, if on smaller screens\n        if (this.default_footer < 1 &&\n            parseFloat(footer.style.fontSize) > this.default_footer)\n            footer.style.fontSize = this.default_footer + \"em\";\n        setTimeout(() => { this.checkToolbarOverflow(); }, 1000);\n        // Prevent default actions after event handling\n        if (e)\n            e.preventDefault();\n    }\n    // ---\n    // Description: Checks the toolbar for overflow and scales it down if needed.\n    // ---\n    checkToolbarOverflow() {\n        // check if footer is still on the same line\n        var ov = document.querySelector(\"#rslidy-button-overview\").getBoundingClientRect();\n        var toc = document.querySelector(\"#rslidy-button-toc\").getBoundingClientRect();\n        console.log(ov.top + \" - \" + toc.top);\n        if (ov.top == toc.top)\n            return;\n        else\n            this.changeUIFont(null, -1);\n    }\n}\n","import { print_settings_html } from \"./html-definitions\";\nexport class PrintSettingsComponent {\n    constructor() {\n        var _a;\n        this.view = window.rslidy.utils.prependHtmlString(document.body, print_settings_html);\n        this.initializeSlideRangeToggle();\n        // Set default values\n        this.view.querySelector(\"#rslidy-checkbox-snum\").checked = true;\n        this.view.querySelector(\"#rslidy-checkbox-link\").checked = true;\n        // Apply print settings on change\n        const inputs = this.view.getElementsByTagName(\"input\");\n        for (let i = 0; i < inputs.length; i++) {\n            inputs[i].onchange = () => this.applyPrintSettings();\n        }\n        // Close menu on selection\n        const elementsToCloseOn = [\n            \"#rslidy-checkbox-link\",\n            \"#rslidy-checkbox-snum\",\n            \"#rslidy-checkbox-frame\",\n            \"#rslidy-input-font-size\",\n            \"#rslidy-button-print-submit\"\n        ];\n        elementsToCloseOn.forEach(selector => {\n            var _a;\n            (_a = this.view.querySelector(selector)) === null || _a === void 0 ? void 0 : _a.addEventListener(\"click\", e => window.rslidy.toolbar.closeMenuOnSelection());\n        });\n        // Print button handler\n        (_a = this.view.querySelector(\"#rslidy-button-print-submit\")) === null || _a === void 0 ? void 0 : _a.addEventListener(\"click\", e => this.print());\n        this.applyPrintSettings();\n    }\n    initializeSlideRangeToggle() {\n        const slideRadios = this.view.querySelectorAll('input[name=\"slide-print-option\"]');\n        const rangeInput = this.view.querySelector(\"#rslidy-slide-range-input\");\n        const positionRadios = this.view.querySelectorAll('input[name=\"transform-origin\"]');\n        const customScaleRadio = this.view.querySelector('#rslidy-checkbox-custom');\n        const scalingInput = this.view.querySelector('#custom-scaling-input');\n        if (!slideRadios.length || !rangeInput || !customScaleRadio) {\n            console.error(\"Print settings elements not found!\");\n            return;\n        }\n        // Update all dependent states\n        const updateStates = () => {\n            var _a, _b;\n            // Fix: Properly type the checked radio button\n            const checkedSlideRadio = this.view.querySelector('input[name=\"slide-print-option\"]:checked');\n            const isCustomSlide = (checkedSlideRadio === null || checkedSlideRadio === void 0 ? void 0 : checkedSlideRadio.value) === \"custom\";\n            const isCustomScale = customScaleRadio.checked;\n            // Slide range input\n            rangeInput.disabled = !isCustomSlide;\n            // Rest of the method remains the same...\n            scalingInput.disabled = !isCustomScale;\n            positionRadios.forEach(radio => {\n                radio.disabled = !isCustomScale;\n                const label = radio.closest('label');\n                if (label) {\n                    label.style.opacity = isCustomScale ? \"1\" : \"0.5\";\n                    label.style.cursor = isCustomScale ? \"pointer\" : \"not-allowed\";\n                }\n            });\n            // Update position visual feedback\n            document.querySelectorAll(\".rslidy-print-position svg rect\").forEach(rect => {\n                rect.setAttribute(\"fill\", \"grey\");\n            });\n            if (isCustomScale) {\n                const selectedPosition = this.view.querySelector('input[name=\"transform-origin\"]:checked');\n                if (selectedPosition) {\n                    (_b = (_a = selectedPosition.closest('label')) === null || _a === void 0 ? void 0 : _a.querySelector('rect')) === null || _b === void 0 ? void 0 : _b.setAttribute(\"fill\", \"#4D4D4D\");\n                }\n            }\n        };\n        // Initialize states\n        updateStates();\n        // Event listeners\n        slideRadios.forEach(radio => {\n            radio.addEventListener(\"change\", updateStates);\n        });\n        customScaleRadio.addEventListener(\"change\", updateStates);\n        // Position selection highlighting\n        positionRadios.forEach(radio => {\n            radio.addEventListener(\"change\", function () {\n                var _a, _b;\n                if (!customScaleRadio.checked)\n                    return;\n                document.querySelectorAll(\".rslidy-print-position svg rect\").forEach(rect => {\n                    rect.setAttribute(\"fill\", \"grey\");\n                });\n                (_b = (_a = this.closest('label')) === null || _a === void 0 ? void 0 : _a.querySelector('rect')) === null || _b === void 0 ? void 0 : _b.setAttribute(\"fill\", \"#4D4D4D\");\n            });\n        });\n        // Print options changes\n        document.querySelectorAll('input[name=\"print-options\"]').forEach(radio => {\n            radio.addEventListener(\"change\", updateStates);\n        });\n    }\n    applyPrintSettings() {\n        if (this.style) {\n            document.head.removeChild(this.style);\n        }\n        // Get all settings values\n        const link = this.view.querySelector(\"#rslidy-checkbox-link\");\n        const snum = this.view.querySelector(\"#rslidy-checkbox-snum\");\n        const frame = this.view.querySelector(\"#rslidy-checkbox-frame\");\n        const font_size = this.view.querySelector(\"#rslidy-input-font-size\");\n        const layout = this.view.querySelector(\"#rslidy-select-orientation\");\n        const paperSize = this.view.querySelector(\"#rslidy-select-paper-size\");\n        const selectedSlideOption = this.view.querySelector('input[name=\"slide-print-option\"]:checked');\n        const slideRangeInput = this.view.querySelector(\"#rslidy-slide-range-input\");\n        const selectedOrigin = this.view.querySelector('input[name=\"transform-origin\"]:checked');\n        const origin = (selectedOrigin === null || selectedOrigin === void 0 ? void 0 : selectedOrigin.value) || \"center\";\n        const scalingInput = this.view.querySelector(\"#custom-scaling-input\");\n        let css = \"@media print {\\n\";\n        // Handle slide visibility\n        if (selectedSlideOption.value === \"custom\") {\n            const range = this.parseSlideRange(slideRangeInput.value);\n            css += this.applyCustomSlideRange(range);\n        }\n        else if (selectedSlideOption.value === \"current\") {\n            css += this.applyCurrentSlideOnly();\n        }\n        // Paper size and orientation\n        const isValidFormat = /^\\d+(mm|in)\\s\\d+(mm|in)$/.test(paperSize.value);\n        if (!isValidFormat) {\n            console.error(\"Invalid paper size format\");\n            return;\n        }\n        let dimensions = paperSize.value;\n        if (layout.value === \"landscape\") {\n            const [width, height] = dimensions.split(\" \");\n            dimensions = `${height} ${width}`;\n        }\n        css += `\n      #chart .window-rv { display: block; }\n      #rslidy-content-section .slide { display: block; }\n      .slide.animated { animation: none !important; }\n      .unitdisk-nav { position: relative !important; height: 65vh !important; top: 15% !important; }\n      #vorotree canvas { display: block; position: relative !important; max-width: 100% !important; height: auto !important; }\n      @page { size: ${dimensions}; }\n    `;\n        // Handle print sizing options\n        const selectedOption = this.view.querySelector('input[name=\"print-options\"]:checked');\n        if (selectedOption) {\n            switch (selectedOption.value) {\n                case \"actual\":\n                    css += `\n            body {\n                transform: none !important;\n                max-height: 100% !important;\n                text-size-adjust: none !important;\n                -webkit-text-size-adjust: none !important;\n                print-color-adjust: exact !important;\n                width: 100% !important;\n            }\n            #rslidy-content-section .slide {\n                height: auto !important;\n                max-width: ${window.innerWidth}px !important;\n                overflow: visible !important;\n                page-break-after: always !important;\n                padding: 2rem !important;\n            }\n                `;\n                    break;\n                case \"fit-width\":\n                    css += `\n              #rslidy-content-section .slide {\n                  width: 100%%! important;\n                  max-width: 100% !important;\n                  height: auto !important;\n                  overflow: visible !important;\n                  padding: 2rem !important;\n              }\n          `;\n                    break;\n                case \"shrink\":\n                    const [pageWidth, pageHeight] = paperSize.value.split(\" \");\n                    const mmToPx = mm => mm * 3.7795;\n                    const pageHeightPx1 = mmToPx(parseFloat(pageHeight));\n                    const slide = document.querySelector('.slide'); // or loop over all\n                    const slides = document.querySelectorAll('.slide');\n                    slides.forEach(slide => {\n                        if (!(slide instanceof HTMLElement))\n                            return;\n                        const rawHeight = pageHeight.replace(\"mm\", \"\"); // removes 'mm'\n                        const rect = slide.getBoundingClientRect();\n                        const height = rect.height;\n                        const scale = Math.min(mmToPx(parseFloat('210')) / height, 1);\n                        slide.style.transform = `scale(${scale})`;\n                        slide.style.transformOrigin = 'top left';\n                    });\n                    css += `\n              #rslidy-content-section .slide {\n                  margin: 0 auto;\n                  overflow: visible;\n                  page-break-after: always;\n              }\n          `;\n                    break;\n                case \"fit\":\n                    const [widthStr, heightStr] = paperSize.value.split(\" \");\n                    const width = parseFloat(widthStr);\n                    const height = parseFloat(heightStr);\n                    const isLandscape = layout.value === \"landscape\";\n                    // Convert paper dimensions from mm/in to pixels (assuming 96dpi)\n                    const unit = widthStr.replace(/[0-9.]/g, ''); // Extract unit (mm or in)\n                    let pageWidthPx, pageHeightPx;\n                    if (unit === \"mm\") {\n                        pageWidthPx = (isLandscape ? height : width) / 25.4 * 96;\n                        pageHeightPx = (isLandscape ? width : height) / 25.4 * 96;\n                    }\n                    else {\n                        pageWidthPx = (isLandscape ? height : width) * 96;\n                        pageHeightPx = (isLandscape ? width : height) * 96;\n                    }\n                    const marginPx = 10 / 25.4 * 96;\n                    const printableWidth = pageWidthPx - (2 * marginPx);\n                    const printableHeight = pageHeightPx - (2 * marginPx);\n                    css += `\n    #rslidy-content-section .slide {\n      width: ${printableWidth}px !important;\n      height: ${printableHeight}px !important;\n      transform-origin: top left !important;\n     transform: scale(var(--slide-scale-factor)) !important;\n      page-break-after: always !important;\n      overflow: visible !important;\n      position: relative !important;\n      padding: 2rem !important;\n      display: block !important; /* Ensure slides are visible for calculation */\n    }\n    \n    #rslidy-content-section .slide > div {\n     \n      transform-origin: top left !important;\n      width: 100% !important;\n      height: 100% !important;\n    }\n  `;\n                    const script = document.createElement('script');\n                    script.textContent = `\n    // Force reflow\n    document.body.offsetHeight;\n    \n    setTimeout(() => {\n      document.querySelectorAll('#rslidy-content-section .slide').forEach(slide => {\n        // Save original style\n        const originalDisplay = slide.style.display;\n        const originalVisibility = slide.style.visibility;\n        const originalPosition = slide.style.position;\n\n        // Force visibility for measurement\n        slide.style.display = 'block';\n        slide.style.visibility = 'hidden';\n        slide.style.position = 'absolute';\n\n        // Trigger reflow and get slide dimensions\n        const rect = slide.getBoundingClientRect();\n        const slideWidth = rect.width;\n        const slideHeight = rect.height;\n\n        // Restore original styles\n        slide.style.display = originalDisplay;\n        slide.style.visibility = originalVisibility;\n        slide.style.position = originalPosition;\n\n        if (slideWidth <= 0 || slideHeight <= 0) {\n          console.warn('Skipping slide with invalid dimensions');\n          return;\n        }\n\n        // Calculate dynamic scaling for each slide\n        const scaleX = ${printableWidth} / slideWidth;\n        const scaleY = ${printableHeight} / slideHeight;\n\n        // Apply the smaller scale factor to fit the slide on the page\n        const scaleFactor = Math.min(scaleX, scaleY);\n\n        if (!isFinite(scaleFactor)) {\n          console.error('Invalid scale factor calculated:', scaleFactor);\n          return;\n        }\n\n        // Apply the dynamic scale factor for each slide\n        slide.style.setProperty('--slide-scale-factor', scaleFactor);\n      });\n    }, 100);\n  `;\n                    document.head.appendChild(script);\n                    break;\n                case \"custom\":\n                    const scalingValue = parseFloat(scalingInput.value);\n                    if (!isNaN(scalingValue) && scalingValue > 0) {\n                        const scaleFactor = scalingValue / 100;\n                        const origin = (selectedOrigin === null || selectedOrigin === void 0 ? void 0 : selectedOrigin.value) || \"center\";\n                        css += `\n              #rslidy-content-section .slide {\n                bottom: 0 !important;\n                left: 0 !important;\n              \n                transform: scale(${scaleFactor}) !important;\n                transform-origin: ${origin} !important;\n                width: auto !important;\n                height: auto !important;\n                overflow: visible !important;\n                margin: 0;\n                box-sizing: border-box;\n              }\n            `;\n                    }\n                    break;\n            }\n        }\n        // Additional print settings\n        if (!link.checked) {\n            css += `a[href^=\"http://\"]:after, a[href^=\"https://\"]:after { content: \"\" !important; }`;\n        }\n        if (snum.checked) {\n            css += `\n        #rslidy-content-section { counter-reset: slide-counter; }\n        #rslidy-content-section .slide:after {\n          content: counter(slide-counter);\n          counter-increment: slide-counter;\n          position: absolute;\n          right: 0.8rem;\n          bottom: 0.8rem;\n          font: 60% Sans-Serif;\n        }\n      `;\n        }\n        if (frame.checked) {\n            css += `.slide { border: ${window.rslidy.print_frame}; }`;\n        }\n        if (font_size.value != \"\") {\n            css += `body { font-size: ${font_size.value}%; }`;\n        }\n        css += \"\\n}\";\n        // Inject CSS\n        const style = document.createElement('style');\n        style.type = 'text/css';\n        style.innerHTML = css;\n        document.head.appendChild(style);\n        this.style = style;\n        // Print media support\n        if (window.matchMedia) {\n            const mediaQueryList = window.matchMedia('print');\n            mediaQueryList.addListener(mql => {\n                if (mql.matches)\n                    window.dispatchEvent(new Event('resize'));\n            });\n        }\n    }\n    parseSlideRange(input) {\n        return input.split(',').reduce((acc, part) => {\n            if (part.includes('-')) {\n                const [start, end] = part.split('-').map(Number);\n                if (!isNaN(start) && !isNaN(end) && start <= end) {\n                    for (let i = start; i <= end; i++)\n                        acc.push(i);\n                }\n            }\n            else {\n                const num = Number(part);\n                if (!isNaN(num))\n                    acc.push(num);\n            }\n            return acc;\n        }, []);\n    }\n    applyCustomSlideRange(range) {\n        const slides = document.querySelectorAll(\"#rslidy-content-section .slide\");\n        const totalSlides = slides.length;\n        const validRange = range.filter(num => num >= 1 && num <= totalSlides);\n        const visibleSlides = validRange\n            .map(num => `#rslidy-content-section .slide:nth-of-type(${num}) { display: block !important; }`)\n            .join(\"\\n\");\n        return `\n      #rslidy-content-section .slide { display: none !important; }\n      ${visibleSlides}\n    `;\n    }\n    applyCurrentSlideOnly() {\n        const currentSlideIndex = window.rslidy.content.getCurrentSlideIndex();\n        return `\n      #rslidy-content-section .slide { display: none !important; }\n      #rslidy-content-section .slide:nth-of-type(${currentSlideIndex + 1}) { display: block !important; }\n    `;\n    }\n    print() {\n        try {\n            this.applyPrintSettings();\n            const slides = document.querySelectorAll(\"#rslidy-content-section .slide\");\n            const originalHiddenSlides = new Set();\n            slides.forEach(slide => {\n                if (slide.classList.contains(\"rslidy-hidden\")) {\n                    originalHiddenSlides.add(slide);\n                    slide.classList.remove(\"rslidy-hidden\");\n                }\n            });\n            setTimeout(() => {\n                window.print();\n                slides.forEach(slide => {\n                    if (originalHiddenSlides.has(slide)) {\n                        slide.classList.add(\"rslidy-hidden\");\n                    }\n                });\n            }, 200);\n        }\n        catch (e) {\n            console.error(\"Print error:\", e);\n        }\n    }\n    loadSettings() {\n        try {\n            const item = localStorage.getItem(\"rslidy-print\");\n            if (!item)\n                return;\n            const data = JSON.parse(item);\n            this.view.querySelector(\"#rslidy-checkbox-link\").checked = data.links;\n            this.view.querySelector(\"#rslidy-checkbox-snum\").checked = data.slidenumbers;\n            this.view.querySelector(\"#rslidy-checkbox-frame\").checked = data.frame;\n            if (data.font_size) {\n                this.view.querySelector(\"#rslidy-input-font-size\").value = data.font_size;\n            }\n            if (data.layout) {\n                this.view.querySelector(\"#rslidy-select-orientation\").value = data.layout;\n            }\n            if (data.paperSize) {\n                this.view.querySelector(\"#rslidy-select-paper-size\").value = data.paperSize;\n            }\n            this.applyPrintSettings();\n        }\n        catch (e) {\n            console.error(\"Error loading settings:\", e);\n        }\n    }\n    saveSettings() {\n        try {\n            localStorage.setItem(\"rslidy-print\", this.generateJSON());\n        }\n        catch (e) {\n            console.error(\"Error saving settings:\", e);\n        }\n    }\n    generateJSON() {\n        return JSON.stringify({\n            links: this.view.querySelector(\"#rslidy-checkbox-link\").checked,\n            slidenumbers: this.view.querySelector(\"#rslidy-checkbox-snum\").checked,\n            frame: this.view.querySelector(\"#rslidy-checkbox-frame\").checked,\n            font_size: this.view.querySelector(\"#rslidy-input-font-size\").value,\n            layout: this.view.querySelector(\"#rslidy-select-orientation\").value,\n            paperSize: this.view.querySelector(\"#rslidy-select-paper-size\").value\n        });\n    }\n}\n","import { toolbar_html } from \"./html-definitions\";\nexport class ToolbarComponent {\n    constructor() {\n        this.enableiv = false;\n        this.view =\n            window.rslidy.utils.appendHtmlString(document.querySelector('#rslidy-column-flex'), toolbar_html);\n        this.view\n            .querySelector(\"#rslidy-button-overview\")\n            .addEventListener(\"click\", () => this.closeMenuOnBlur(() => this.overviewToggleClicked()));\n        this.view\n            .querySelector(\"#rslidy-button-toc\")\n            .addEventListener(\"click\", () => this.closeMenuOnBlur(() => this.tocToggleClicked()));\n        this.view\n            .querySelector(\"#rslidy-button-help\")\n            .addEventListener(\"click\", () => this.closeMenuOnBlur(() => this.helpToggleClicked()));\n        this.view\n            .querySelector(\"#rslidy-button-first\")\n            .addEventListener(\"click\", () => this.closeMenuOnBlur(() => window.rslidy.content.navFirst()));\n        this.view\n            .querySelector(\"#rslidy-button-previous\")\n            .addEventListener(\"click\", () => this.closeMenuOnBlur(() => window.rslidy.content.navPrevious(true)));\n        this.view\n            .querySelector(\"#rslidy-button-next\")\n            .addEventListener(\"click\", () => this.closeMenuOnBlur(() => window.rslidy.content.navNext(true)));\n        this.view\n            .querySelector(\"#rslidy-button-last\")\n            .addEventListener(\"click\", () => this.closeMenuOnBlur(() => window.rslidy.content.navLast()));\n        this.view\n            .querySelector(\"#rslidy-button-hide\")\n            .addEventListener(\"click\", () => this.closeMenuOnBlur(() => this.showHideToggleClicked()));\n        this.view\n            .querySelector(\"#rslidy-button-show\")\n            .addEventListener(\"click\", () => this.showHideToggleClicked());\n        this.view\n            .querySelector(\"#rslidy-button-all\")\n            .addEventListener(\"click\", () => this.displayToggleClicked());\n        this.view\n            .querySelector(\"#rslidy-timer\")\n            .addEventListener(\"click\", () => this.closeMenuOnBlur(() => window.rslidy.toggleTimer()));\n        this.view\n            .querySelector(\"#rslidy-slide-caption\")\n            .addEventListener(\"click\", () => this.closeMenuOnBlur(() => this.tocToggleClicked()));\n        this.view\n            .querySelector(\"#rslidy-button-menu\")\n            .addEventListener(\"click\", () => this.menuToggleClicked(window.rslidy.MENU));\n        this.view\n            .querySelector(\"#rslidy-button-print\")\n            .addEventListener(\"click\", () => this.menuToggleClicked(window.rslidy.PRINT_MENU));\n        this.view\n            .querySelector(\"#rslidy-slide-input\")\n            .addEventListener(\"keyup\", e => this.closeMenuOnBlur(() => window.rslidy.slideInputKeyPressed(e)));\n        // Only allow numbers for slide input\n        window.rslidy.utils.setInputFilter(document.getElementById(\"rslidy-slide-input\"), function (value) { return /^\\d*$/.test(value); });\n        document.getElementById(\"rslidy-help\")\n            .addEventListener(\"mouseup\", e => this.closeHelpOnBlur(e));\n        if (window.rslidy.start_with_toolbar_minimized)\n            this.showHideToggleClicked();\n    }\n    // ---\n    // Description: Called whenever the overview button is clicked.\n    // ---\n    overviewToggleClicked() {\n        window.rslidy.utils.switchElementsClass([document.getElementById(\"rslidy-overview-slides\")], \"rslidy-overview-visible\");\n        window.rslidy.utils.switchElementsClass([document.getElementById(\"rslidy-overview-slides\")], \"rslidy-invisible\");\n        window.rslidy.overview.adjustOverviewPanel();\n        let visible = document.getElementById(\"rslidy-overview-slides\").classList.contains(\"rslidy-overview-visible\");\n        document.getElementById(\"rslidy-button-overview\").setAttribute(\"aria-expanded\", String(visible));\n        setTimeout(() => document.getElementById(\"rslidy-overview-slides\").focus(), 100);\n    }\n    // ---\n    // Description: Called whenever the help button is clicked.\n    // ---\n    helpToggleClicked() {\n        if (window.location.hash.match(\"#rslidy-help\"))\n            window.location.hash = \"#\";\n        else {\n            window.location.hash = \"#rslidy-help\";\n            document.getElementById(\"rslidy-help-popup\").scrollTop = 0;\n            document.getElementById(\"rslidy-help\").focus();\n        }\n    }\n    // ---\n    // Description: Called when clicking on the help overlay and closes the help\n    // panel when clicking outside of the popup.\n    // e: The click event\n    // ---\n    closeHelpOnBlur(e) {\n        if (e.target.id == \"rslidy-help\")\n            window.location.hash = \"#\";\n    }\n    // ---\n    // Description: Called whenever the toc button is clicked.\n    // ---\n    tocToggleClicked() {\n        window.rslidy.utils.switchElementsClass([document.getElementById(\"rslidy-overview-toc\")], \"rslidy-overview-visible\");\n        window.rslidy.utils.switchElementsClass([document.getElementById(\"rslidy-overview-toc\")], \"rslidy-invisible\");\n        let visible = document.getElementById(\"rslidy-overview-toc\").classList.contains(\"rslidy-overview-visible\");\n        document.getElementById(\"rslidy-button-toc\").setAttribute(\"aria-expanded\", String(visible));\n        setTimeout(() => document.getElementById(\"rslidy-overview-toc\").focus(), 100);\n    }\n    // ---\n    // Description: Called whenever the all slides button is clicked.\n    // ---\n    displayToggleClicked() {\n        if (this.allslides) {\n            //find first visible slide\n            var num = window.rslidy.content.currentSlideIndex;\n            for (let i = 0; i < window.rslidy.num_slides; i++) {\n                var slide = window.rslidy.utils.getSlide(i);\n                if (window.rslidy.utils.checkVisible(slide)) {\n                    num = i;\n                    break;\n                }\n            }\n            document.getElementsByTagName('head')[0].removeChild(this.allslides);\n            this.allslides = null;\n            if (this.enableiv)\n                window.rslidy.image_viewer = true;\n            if (this.printstyle)\n                document.getElementsByTagName('head')[0].appendChild(this.printstyle);\n            window.rslidy.content.showSlide(num, false);\n        }\n        else {\n            var css = `\n      body {\n        background-color: white !important;\n      }\n      .rslidy-ui {\n        display: none !important;\n      }\n      a[href^=\"http://\"]:after, a[href^=\"https://\"]:after {\n        content: \"\" !important;\n      }\n      .slide.animated {\n        animation: none !important;\n      }\n      .slide, #rslidy-column-flex, #rslidy-row-flex {\n        display: block !important;\n        page-break-after: avoid !important;\n        page-break-inside: always !important;\n        -webkit-region-break-inside: always !important;\n        position: relative !important;\n      }\n      html,\n      body,\n      #rslidy-content-section, #rslidy-row-flex {\n        left: 0em !important;\n        right: 0em !important;\n        max-height: 100% !important;\n      }\n      img {\n        max-width: 100% !important;\n        max-height: 100% !important;\n      }\n      #rslidy-content-section {\n        counter-reset: slide-counter;\n      }\n      #rslidy-content-section .slide:after {\n        display: block;\n        content: counter(slide-counter);\n        counter-increment: slide-counter;\n        margin-top: 0.5em;\n        text-align: right;\n        font: 80% Sans-Serif;\n      }\n      .slide {\n        border: ` + window.rslidy.print_frame + `;\n      }\n      #rslidy-trapezoid-wrapper-display {\n        display: block !important;\n      }`;\n            // inject CSS\n            var style = document.createElement('style');\n            style.type = 'text/css';\n            style.innerHTML = css;\n            document.getElementsByTagName('head')[0].appendChild(style);\n            this.allslides = style;\n            if (window.rslidy.image_viewer) {\n                this.enableiv = true;\n                window.rslidy.image_viewer = false;\n            }\n            if (window.rslidy.printSettings.style) {\n                this.printstyle = window.rslidy.printSettings.style;\n                document.getElementsByTagName('head')[0].removeChild(this.printstyle);\n            }\n            //scroll to current slide\n            var slide = window.rslidy.utils.getSlide(window.rslidy.content.currentSlideIndex);\n            slide.scrollIntoView();\n        }\n        window.dispatchEvent(new Event('resize'));\n    }\n    // ---\n    // Description: Wrapper for the custom settings close_menu_on_blur and\n    // close_menu_on_selection\n    // fun: An optional function to execute before closing menues\n    // condition: The condition for closing the menues\n    // ---\n    closeMenuWrapper(fun = null, condition) {\n        if (fun)\n            fun();\n        if (condition)\n            this.closeMenues();\n    }\n    // ---\n    // Description: Close open menues on blur\n    // ---\n    closeMenuOnBlur(fun = null) {\n        this.closeMenuWrapper(fun, window.rslidy.close_menu_on_blur);\n    }\n    // ---\n    // Description: Close open menues on selection\n    // ---\n    closeMenuOnSelection(fun = null) {\n        this.closeMenuWrapper(fun, window.rslidy.close_menu_on_selection);\n    }\n    // ---\n    // Description: Closes all menues\n    // ---\n    closeMenues() {\n        document.getElementById(\"rslidy-menu\").classList.add(\"rslidy-hidden\");\n        document.getElementById(\"rslidy-print-menu\").classList.add(\"rslidy-hidden\");\n        document.getElementById(\"rslidy-button-menu\").setAttribute(\"aria-expanded\", \"false\");\n        document.getElementById(\"rslidy-button-print\").setAttribute(\"aria-expanded\", \"false\");\n    }\n    // ---\n    // Description: Called whenever a menu button is clicked.\n    // index: The index of the menu (See constants in rslidy.ts)\n    // ---\n    menuToggleClicked(index) {\n        const menues = [\"rslidy-menu\", \"rslidy-print-menu\"];\n        const buttons = [\"rslidy-button-menu\", \"rslidy-button-print\"];\n        // Close other menu if open\n        var close = document.getElementById(menues[(index + 1) % 2]);\n        var closebtn = document.getElementById(buttons[(index + 1) % 2]);\n        close.classList.add(\"rslidy-hidden\");\n        closebtn.setAttribute(\"aria-expanded\", \"false\");\n        // Toggle menu show status\n        var menu = document.getElementById(menues[index]);\n        var button = document.getElementById(buttons[index]);\n        if (menu.classList.contains(\"rslidy-hidden\")) {\n            menu.classList.remove(\"rslidy-hidden\");\n            button.setAttribute(\"aria-expanded\", \"true\");\n        }\n        else {\n            menu.classList.add(\"rslidy-hidden\");\n            button.setAttribute(\"aria-expanded\", \"false\");\n        }\n        menu.focus();\n        // iOS13 requires permissions for both event handlers (workaround)\n        // needs to come from a user fired event (e.g click)\n        // the page needs to be https\n        if (index == window.rslidy.MENU) {\n            if (typeof window.DeviceMotionEvent.requestPermission === 'function') {\n                window.DeviceMotionEvent.requestPermission()\n                    .then(permissionState => {\n                    if (permissionState === 'granted') {\n                        window.addEventListener(\"devicemotion\", function (e) {\n                            window.rslidy.onDeviceMotion(e);\n                        }.bind(window.rslidy));\n                    }\n                })\n                    .catch(console.error);\n            }\n            if (typeof window.DeviceOrientationEvent.requestPermission === 'function') {\n                window.DeviceOrientationEvent.requestPermission()\n                    .then(permissionState => {\n                    if (permissionState === 'granted') {\n                        window.addEventListener(\"deviceorientation\", function (e) {\n                            window.rslidy.onDeviceOrientation(e);\n                        }.bind(window.rslidy));\n                    }\n                })\n                    .catch(console.error);\n            }\n        }\n    }\n    // ---\n    // Description: Called whenever the show/hide toolbar button is clicked.\n    // ---\n    showHideToggleClicked() {\n        window.rslidy.utils.switchElementsClass([document.getElementById(\"rslidy-tb-show-trapezoid\")], \"rslidy-hidden\");\n        window.rslidy.utils.switchElementsClass([document.getElementById(\"rslidy-toolbar-area\")], \"rslidy-bar-hidden\");\n    }\n}\n","import { thumbnail_html, link_html, preview_html } from \"./html-definitions\";\nexport class OverviewComponent {\n    constructor(model) {\n        this.preview_width = 250;\n        this.model = model;\n        this.slide_view = document.querySelector('#rslidy-overview-slides');\n        this.toc_view = document.querySelector('#rslidy-overview-toc');\n        var nubs = document.querySelector('#rslidy-progress-bar-nubs');\n        // Iterate over all slides and set up the overview and toc\n        for (var i = 0; i < window.rslidy.num_slides; i++) {\n            const slideHtml = model[i];\n            const title = i + 1 + \". \" + this.getSlideHeading(slideHtml);\n            const xofy = i + 1 + \" / \" + window.rslidy.num_slides;\n            const thumbnail = window.rslidy.utils.appendHtmlString(this.slide_view, thumbnail_html(i, xofy, slideHtml, \"\"));\n            thumbnail.addEventListener(\"click\", e => this.slideSelected(e));\n            var pv = window.rslidy.utils.appendHtmlString(nubs, preview_html(i));\n            pv.style.width = \"calc(100%/\" + window.rslidy.num_slides + \")\";\n            pv.style.left = \"calc((100%/\" + window.rslidy.num_slides + \")*\" + i + \")\";\n            if (!window.rslidy.show_slide_dividers)\n                pv.classList.add(\"rslidy-nonubs\");\n            pv.addEventListener(\"click\", e => window.rslidy.content.showSlide(Number(e.target.dataset.slideindex), false));\n            pv.addEventListener(\"mouseover\", e => this.showPreview(e.target));\n            pv.addEventListener(\"mouseout\", e => this.removePreview(e.target));\n            const link = window.rslidy.utils.appendHtmlString(this.toc_view, link_html(i, title));\n            link.addEventListener(\"click\", e => this.slideSelected(e));\n        }\n        this.slide_view.classList.add(\"rslidy-overview\");\n        this.toc_view.classList.add(\"rslidy-overview\");\n        this.adjustOverviewPanel();\n        window.rslidy.utils.switchElementsClass([this.toc_view], \"rslidy-invisible\");\n        window.rslidy.utils.switchElementsClass([this.slide_view], \"rslidy-invisible\");\n    }\n    // ---\n    // Description: Adjust the overview panel\n    // ---\n    adjustOverviewPanel() {\n        this.adjustPanel(\"\");\n    }\n    // ---\n    // Description: Adjust the progressbar preview panels\n    // ---\n    adjustPreviewPanel() {\n        this.adjustPanel(\"-pv\");\n    }\n    // ---\n    // Description: Adjusts the aspect ratio and display sizes of the thumbnail\n    // images in the overview menu.\n    // suffix: used by the wrapper functions above\n    // ---\n    adjustPanel(suffix) {\n        // Get items\n        var thumbnail_wrappers = document.getElementsByClassName(\"rslidy-slide-thumbnail\" + suffix);\n        var overview_items = document.getElementsByClassName(\"rslidy-overview-item\" + suffix);\n        // Get the percentage of width pixels of the overview section with respect\n        // to window.outerWidth\n        var aspect_ratio = window.rslidy.custom_aspect_ratio != 0\n            ? window.rslidy.custom_aspect_ratio\n            : window.rslidy.utils.getCurrentAspectRatio();\n        var overview_slide_zoom = window.rslidy.overview_slide_zoom;\n        var custom_width = window.rslidy.custom_width;\n        var final_width = custom_width / overview_slide_zoom;\n        var overview_width = this.slide_view.clientWidth;\n        if (suffix == \"-pv\")\n            overview_width = this.preview_width;\n        var relative_width = window.rslidy.utils.getRelativeWidth(overview_width, aspect_ratio, final_width);\n        for (var i = 0; i < overview_items.length; i++) {\n            // 1. Set width and height of the overview element to outerWidth and\n            // outerHeight, respectively\n            overview_items[i].style.width =\n                window.rslidy.utils.getSlideWidth(aspect_ratio, final_width) + \"px\";\n            overview_items[i].style.height =\n                window.rslidy.utils.getSlideHeight(aspect_ratio, final_width) + \"px\";\n            // 2. Do the transformation of the overview element now with\n            // relative_width (browser compatibility)\n            var scale_value = \"scale3d(\" +\n                relative_width + \", \" + relative_width + \", \" + relative_width + \")\";\n            var origin_value = \"0 0 0\";\n            overview_items[i].style.transform = scale_value; // safety first\n            overview_items[i].style.transformOrigin = origin_value; // safety first\n            overview_items[i].style.MozTransform = scale_value;\n            overview_items[i].style.MozTransformOrigin = origin_value;\n            overview_items[i].style.webkitTransform = scale_value;\n            overview_items[i].style.webkitTransformOrigin = origin_value;\n            overview_items[i].style.msTransform = scale_value;\n            overview_items[i].style.msTransformOrigin = origin_value;\n            // 3. Now, set the width pixels of the wrapper element to the overview\n            // width pixels and calculate its height with the aspect ratio\n            const w = overview_width;\n            const h = w /\n                (window.rslidy.utils.getSlideWidth(aspect_ratio, final_width) /\n                    window.rslidy.utils.getSlideHeight(aspect_ratio, final_width));\n            if (suffix == \"-pv\")\n                thumbnail_wrappers[i].style.width = (w - 20) + \"px\";\n            thumbnail_wrappers[i].style.height = (h - 20) + \"px\";\n        }\n    }\n    // ---\n    // Description: Returns the heading of a slide if available (or \"slide\" if\n    // not found).\n    // slide_element: The slide element to get the heading from.\n    // ---\n    getSlideHeading(slide_element) {\n        if (slide_element.indexOf(\"<h1>\") !== -1)\n            return slide_element.substring(slide_element.indexOf(\"<h1>\") + 4, slide_element.indexOf(\"</h1>\"));\n        else if (slide_element.indexOf(\"<h2>\") !== -1)\n            return slide_element.substring(slide_element.indexOf(\"<h2>\") + 4, slide_element.indexOf(\"</h2>\"));\n        else if (slide_element.indexOf(\"<h3>\") !== -1)\n            return slide_element.substring(slide_element.indexOf(\"<h3>\") + 4, slide_element.indexOf(\"</h3>\"));\n        else\n            return \"slide\";\n    }\n    // ---\n    // Description: Show a slide preview on the progressbar\n    // e: the mouseover event\n    // ---\n    showPreview(e) {\n        const i = Number(e.dataset.slideindex);\n        const slideHtml = this.model[i];\n        const xofy = i + 1 + \" / \" + window.rslidy.num_slides;\n        const child = e.children[0];\n        const thumbnail = window.rslidy.utils.appendHtmlString(child, thumbnail_html(i, xofy, slideHtml, \"-pv\"));\n        thumbnail.addEventListener(\"touchstart\", e2 => {\n            this.slideSelected(e2);\n            this.removePreview(e);\n        });\n        if (window.rslidy.low_light_mode) {\n            let elements = child.getElementsByTagName(\"img\");\n            window.rslidy.utils.switchElementsClass(elements, \"rslidy-color-invert\");\n        }\n        var y = window.innerHeight - e.getBoundingClientRect().bottom + 20;\n        var x = e.offsetLeft + e.offsetWidth / 2;\n        x -= this.preview_width / 2;\n        if (x < 0)\n            x = 0;\n        if (x > window.innerWidth - this.preview_width + 12)\n            child.style.right = \"0px\";\n        else\n            child.style.left = x + \"px\";\n        child.style.bottom = y + \"px\";\n        this.adjustPreviewPanel();\n    }\n    // ---\n    // Description: Remove a slide preview from the progressbar\n    // e: the mouseout event\n    // ---\n    removePreview(e) {\n        e.children[0].innerHTML = '';\n    }\n    // ---\n    // Description: Called whenever a slide thumbnail in the overview gets\n    // clicked.\n    // e: Event.\n    // ---\n    slideSelected(e) {\n        // Get the click target\n        var target = e.target;\n        // Fix for z-index bug on iOS\n        while (target.className != \"rslidy-slide-clickelement\" &&\n            target.className != \"rslidy-slide-link\")\n            target = target.parentElement;\n        // Get the index of the slide\n        var slide_index = Number(target.dataset.slideindex);\n        // Switch to this slide\n        window.rslidy.content.showSlide(slide_index, false);\n        // Close overview menu if desired\n        if (window.rslidy.close_navigation_on_selection == true) {\n            if (this.slide_view.classList.contains(\"rslidy-overview-visible\"))\n                window.rslidy.toolbar.overviewToggleClicked();\n            if (this.toc_view.classList.contains(\"rslidy-overview-visible\"))\n                window.rslidy.toolbar.tocToggleClicked();\n        }\n        // Prevent link clicking (iOS)\n        e.preventDefault();\n    }\n}\n","export class SlideTransition {\n    constructor() {\n        this.animationTypeFade = \"fade\";\n        this.animationTypeSlideIn = \"slidein\";\n        this.animationTypeZoom = \"zoom\";\n        this.isSlidein = false;\n        this.hideTimeout = 500;\n        this.contentSection = document.getElementById(\"rslidy-content-section\");\n        this.slides = this.contentSection.getElementsByClassName(\"slide\");\n        this.slideThumbnails = document.getElementsByClassName(\"rslidy-slide-thumbnail\");\n        let bodyClasses = document.getElementsByTagName(\"body\")[0]\n            .classList;\n        if (!bodyClasses.contains(\"unanimated\")) {\n            if (bodyClasses.contains(this.animationTypeFade)) {\n                this.setSlideTransitionClass(this.animationTypeFade);\n            }\n            else if (bodyClasses.contains(this.animationTypeZoom)) {\n                this.setSlideTransitionClass(this.animationTypeZoom);\n            }\n            else {\n                document\n                    .getElementsByTagName(\"body\")[0]\n                    .classList.add(this.animationTypeSlideIn);\n                this.setSlideTransitionClass(this.animationTypeSlideIn);\n                this.isSlidein = true;\n            }\n        }\n        else\n            this.hideTimeout = 0;\n        this.slideTimeouts = new Array(this.slides.length);\n        // Hide all slides and remove selected effect\n        for (let i = 0; i < this.slides.length; i++) {\n            this.slides[i].classList.add(\"rslidy-hidden\");\n            this.slideThumbnails[i].classList.remove(\"rslidy-slide-selected\");\n        }\n    }\n    // ---\n    // Description: Adds classes to the slides for proper slide transitions.\n    // ---\n    setSlideTransitionClass(transitionClass) {\n        for (let i = 0; i < this.slides.length; i++) {\n            this.slides[i].classList.add(transitionClass);\n        }\n    }\n    // ---\n    // Description: Handles a slide transition\n    // currentSlideIndex: The current slide\n    // targetSlideIndex: The target slide\n    // animate: boolean to enable/disable animation\n    // ---\n    doSlideTransition(currentSlideIndex, targetSlideIndex, animate) {\n        if (currentSlideIndex == targetSlideIndex) {\n            return;\n        }\n        var current_slide_classes;\n        var target_slide_classes = this.slides[targetSlideIndex].classList;\n        if (currentSlideIndex >= 0) {\n            current_slide_classes = this.slides[currentSlideIndex].classList;\n            current_slide_classes.remove(\"animated\");\n            // Don't animate when skipping slides\n            if (!animate) {\n                target_slide_classes.remove(\"animated\");\n                current_slide_classes.add(\"rslidy-hidden\");\n            }\n            else {\n                target_slide_classes.add(\"animated\");\n                setTimeout(() => {\n                    // restarts the animation\n                    current_slide_classes.add(\"animated\");\n                }, 10);\n                this.slideTimeouts[currentSlideIndex] = setTimeout(() => {\n                    current_slide_classes.add(\"rslidy-hidden\");\n                }, this.hideTimeout);\n            }\n            this.slideThumbnails[currentSlideIndex].classList.remove(\"rslidy-slide-selected\");\n        }\n        if (this.isSlidein) {\n            // Fix classes\n            if (currentSlideIndex >= 0) {\n                if (current_slide_classes.contains(\"slideout\")) {\n                    current_slide_classes.remove(\"slideout\");\n                    current_slide_classes.add(\"slidein\");\n                }\n            }\n            if (target_slide_classes.contains(\"slideout\")) {\n                target_slide_classes.remove(\"slideout\");\n                target_slide_classes.add(\"slidein\");\n            }\n            // We move backwards, so change from slidein to slideout\n            if (currentSlideIndex > targetSlideIndex) {\n                current_slide_classes.remove(\"slidein\");\n                current_slide_classes.add(\"slideout\");\n                target_slide_classes.remove(\"slidein\");\n                target_slide_classes.add(\"slideout\");\n            }\n        }\n        if (currentSlideIndex >= 0) {\n            current_slide_classes.remove(\"forwards\");\n            current_slide_classes.add(\"backwards\");\n        }\n        target_slide_classes.remove(\"backwards\");\n        target_slide_classes.add(\"forwards\");\n        // Show specified slide and add selected effect\n        if (this.slideTimeouts[targetSlideIndex] > 0) {\n            clearTimeout(this.slideTimeouts[targetSlideIndex]);\n        }\n        target_slide_classes.remove(\"rslidy-hidden\");\n        this.slideThumbnails[targetSlideIndex].classList.add(\"rslidy-slide-selected\");\n        // Scroll to the top of this slide\n        this.contentSection.scrollTop = 0;\n        // Scroll to it in the overview and center it if possible\n        // If this is not called after scrollTop it somehow fails in chrome only\n        this.slideThumbnails[targetSlideIndex].scrollIntoView({\n            behavior: 'smooth',\n            block: 'center',\n            inline: 'center'\n        });\n    }\n}\n","import { SlideTransition } from \"./slide-transition\";\nimport { next_pointer_icon, previous_pointer_icon } from \"./icon-definitions\";\nexport class ContentComponent {\n    constructor(view) {\n        this.currentSlideIndex = -1;\n        this.marginTapLeftDown = false;\n        this.marginTapRightDown = false;\n        this.view = view;\n        this.slideTransition = new SlideTransition();\n        this.progress_bar = document.getElementById(\"rslidy-progress-bar\");\n        this.slide_caption = document.getElementById(\"rslidy-slide-caption\");\n        this.slide_input = document.getElementById(\"rslidy-slide-input\");\n        this.view.addEventListener(\"mousedown\", e => {\n            window.rslidy.start_x = e.clientX;\n            window.rslidy.start_y = e.clientY;\n        });\n        const prev_url = btoa(previous_pointer_icon);\n        const next_url = btoa(next_pointer_icon);\n        this.view.addEventListener(\"mousemove\", (e) => {\n            this.marginTap(e, () => {\n                if (this.currentSlideIndex > 0)\n                    this.view.style.cursor = \"url(data:image/svg+xml;base64,\" + prev_url + \"), w-resize\";\n                else\n                    this.view.style.cursor = \"auto\";\n            }, () => {\n                if (this.currentSlideIndex < window.rslidy.num_slides - 1)\n                    this.view.style.cursor = \"url(data:image/svg+xml;base64,\" + next_url + \"), e-resize\";\n                else\n                    this.view.style.cursor = \"auto\";\n            }, () => { this.view.style.cursor = \"auto\"; });\n        });\n        this.view.addEventListener(\"mousedown\", (e) => {\n            //prevent double click selection\n            this.marginTapBoth(e, () => { if (e.detail > 1)\n                e.preventDefault(); }, () => { });\n            //set booleans for mouseup\n            this.marginTap(e, () => { this.marginTapLeftDown = true; }, () => { this.marginTapRightDown = true; }, () => {\n                this.marginTapLeftDown = false;\n                this.marginTapRightDown = false;\n            });\n        });\n        this.view.addEventListener(\"mouseup\", (e) => {\n            this.marginTap(e, () => {\n                if (this.marginTapLeftDown)\n                    this.navPrevious(true);\n                this.marginTapLeftDown = false;\n            }, () => {\n                if (this.marginTapRightDown)\n                    this.navNext(true);\n                this.marginTapRightDown = false;\n            }, () => { });\n            window.rslidy.toolbar.closeMenuOnBlur();\n        });\n        this.view.addEventListener(\"touchstart\", e => this.onTouchstart(e), { passive: true });\n        this.view.addEventListener(\"touchmove\", e => this.onTouchmove(e), { passive: true });\n        this.view.addEventListener(\"touchend\", e => this.onTouchend(e));\n        this.view.querySelector(\"#rslidy-button-current\").addEventListener(\"click\", () => window.rslidy.toolbar.displayToggleClicked());\n    }\n    // ---\n    // Description: calculation logic for margin tap\n    // e: Event.\n    // left, right, center: function callbacks for the left and right\n    // click areas as well as center (& disabled).\n    // Use the both function wrapper to set left = right\n    // ---\n    marginTap(e, left, right, center) {\n        if (document.getElementById(\"rslidy-checkbox-margintap\").checked) {\n            var l = e.pageX - this.view.getBoundingClientRect().left;\n            var r = -(e.pageX - this.view.getBoundingClientRect().right);\n            var scrollBarWidth = this.view.offsetWidth - this.view.clientWidth;\n            if (l < 60)\n                left();\n            else if (r < 60 + scrollBarWidth && r > scrollBarWidth)\n                right();\n            else\n                center();\n        }\n        else\n            center();\n    }\n    marginTapBoth(e, both, center) {\n        this.marginTap(e, both, both, center);\n    }\n    // ---\n    // Description: Called whenever the user begins to touch the body area.\n    // e: Event.\n    // ---\n    onTouchstart(e) {\n        // Register last tap\n        var tap_previous = window.rslidy.tap_last;\n        window.rslidy.tap_last = new Date().getTime();\n        var tap_delay = window.rslidy.tap_last - tap_previous;\n        // Toggle speaker notes on double tap\n        if (tap_delay <= window.rslidy.doubletap_delay) {\n            window.rslidy.toggleSpeakerNotes(e, false);\n        }\n        // Register touch event\n        var touch = e.touches[0];\n        // Set new values and reset old values\n        window.rslidy.start_x = touch.pageX;\n        window.rslidy.start_y = touch.pageY;\n        window.rslidy.delta_x = 0;\n        window.rslidy.delta_y = 0;\n    }\n    // ---\n    // Description: Called whenever the user moves the finger while touching the\n    // body area.\n    // e: Event.\n    // ---\n    onTouchmove(e) {\n        // Update values\n        var touch = e.touches[0];\n        var delta_x_old = window.rslidy.delta_x;\n        window.rslidy.delta_x = touch.pageX - window.rslidy.start_x;\n        window.rslidy.delta_y = touch.pageY - window.rslidy.start_y;\n        // If the delta_x position has changed a lot, the user is swiping and the\n        // content does not need to be scrolled!\n        if (Math.abs(window.rslidy.delta_x - delta_x_old) > 10)\n            e.preventDefault();\n    }\n    // ---\n    // Description: Called whenever the stops touching the body area.\n    // e: Event.\n    // ---\n    onTouchend(e) {\n        // Register old values and calculate absolutes\n        var touch_duration = new Date().getTime() - window.rslidy.tap_last;\n        var delta_x = window.rslidy.delta_x;\n        var delta_y = window.rslidy.delta_y;\n        var delta_x_abs = Math.abs(delta_x);\n        var delta_y_abs = Math.abs(delta_y);\n        var swipe_threshold = window.rslidy.utils.remToPixel(window.rslidy.swipe_threshold);\n        /* Handle the swipe event if the touch duration was shorter than a\n        specified threshold. Also, the movement should be mainly on the x axis\n        (x_movement > window.rslidy.swipe_y_limiter * y_movement) */\n        if (touch_duration < window.rslidy.swipe_max_duration &&\n            (delta_x_abs > swipe_threshold || delta_y_abs > swipe_threshold)) {\n            if (delta_x_abs > window.rslidy.swipe_y_limiter * delta_y_abs) {\n                window.rslidy.shift_pressed = true;\n                if (delta_x < 0)\n                    this.navNext(true);\n                else\n                    this.navPrevious(true);\n                window.rslidy.shift_pressed = false;\n                // Seems to improve scrolling experience on iOS devices somehow\n                e.preventDefault();\n            }\n        }\n    }\n    // ---\n    // Description: Returns the number of incremental list items on a slide.\n    // slide_index: The index of the slide (0-indexed).\n    // only_visible: Returns only the number of currently visible items (optional)\n    // ---\n    getNumIncrItems(slide_index, only_visible) {\n        only_visible = only_visible || false;\n        // Out of bounds check\n        if (slide_index < 0 || slide_index >= window.rslidy.num_slides)\n            return -1;\n        var content_section = document.getElementById(\"rslidy-content-section\");\n        var slide = content_section.getElementsByClassName(\"slide\")[slide_index];\n        var incremental_items = slide.querySelectorAll(\"ul.incremental li\");\n        if (only_visible == false)\n            return incremental_items.length;\n        else {\n            var counter = 0;\n            for (var i = 0; i < incremental_items.length; i++) {\n                if (incremental_items[i].classList.contains(\"rslidy-invisible\") == false)\n                    counter++;\n            }\n            return counter;\n        }\n    }\n    // ---\n    // Description: Jumps to the next slide (or next bullet point).\n    // animate: boolean to enable/disable animation\n    // ---\n    navNext(animate) {\n        if (window.rslidy.toolbar.allslides)\n            return;\n        var current_index = this.currentSlideIndex;\n        window.rslidy.imageViewer.close();\n        // Check for incremental items on current slide\n        if (this.getNumIncrItems(current_index, false) > 0) {\n            var num_incr_items = this.getNumIncrItems(current_index, false);\n            var num_incr_items_shown = this.getNumIncrItems(current_index, true);\n            if (num_incr_items > num_incr_items_shown) {\n                if (window.rslidy.shift_pressed == false)\n                    this.showItemsUpToN(num_incr_items_shown + 1);\n                else\n                    this.showItemsUpToN(num_incr_items);\n                return;\n            }\n        }\n        // Change slide\n        var new_index = current_index + 1;\n        this.showSlide(new_index, animate);\n        // Check for incremental items on next slide\n        if (this.getNumIncrItems(new_index, false) > 0) {\n            var num_incr_items = this.getNumIncrItems(new_index, false);\n            if (window.rslidy.shift_pressed == false)\n                this.showItemsUpToN(1);\n            else\n                this.showItemsUpToN(num_incr_items);\n        }\n    }\n    // ---\n    // Description: Jumps to the last slide.\n    // ---\n    navLast() {\n        // Change slide\n        var new_index = window.rslidy.num_slides - 1;\n        this.showSlide(new_index, false);\n        // Check for incremental items on next slide\n        if (this.getNumIncrItems(new_index, false) > 0) {\n            var num_incr_items = this.getNumIncrItems(new_index, false);\n            if (window.rslidy.shift_pressed == false)\n                this.showItemsUpToN(1);\n            else\n                this.showItemsUpToN(num_incr_items);\n        }\n    }\n    // ---\n    // Description: Jumps to the previous slide (or previous bullet point).\n    // animate: boolean to enable/disable animation\n    // ---\n    navPrevious(animate) {\n        if (window.rslidy.toolbar.allslides)\n            return;\n        var current_index = this.currentSlideIndex;\n        // Check for incremental items on current slide\n        var num_incr_items_shown = this.getNumIncrItems(current_index, true);\n        if (this.getNumIncrItems(current_index, false) > 0 &&\n            num_incr_items_shown > 1) {\n            if (window.rslidy.shift_pressed == false) {\n                this.showItemsUpToN(num_incr_items_shown - 1);\n                return;\n            }\n        }\n        // Change slide\n        var new_index = current_index - 1;\n        this.showSlide(new_index, animate);\n        // Check for incremental items on previous slide\n        if (this.getNumIncrItems(new_index, false) > 0) {\n            var num_incr_items = this.getNumIncrItems(new_index, false);\n            this.showItemsUpToN(num_incr_items);\n        }\n    }\n    // ---\n    // Description: Jumps to the first slide.\n    // ---\n    navFirst() {\n        var new_index = 0;\n        this.showSlide(new_index, false);\n        // Check for incremental items on previous slide\n        if (this.getNumIncrItems(new_index, false) > 0) {\n            var num_incr_items = this.getNumIncrItems(new_index, false);\n            this.showItemsUpToN(num_incr_items);\n        }\n    }\n    // ---\n    // Description: Shows the first n bullet points and hides the rest.\n    // n: Specifies the last incremental item to show.\n    // ---\n    showItemsUpToN(n) {\n        var content_section = document.getElementById(\"rslidy-content-section\");\n        var current_slide = content_section.getElementsByClassName(\"slide\")[this.currentSlideIndex];\n        var incr_items = current_slide.querySelectorAll(\"ul.incremental li\");\n        // Show items with index < n, hide items with index >= n\n        var counter = 0;\n        for (var i = 0; i < incr_items.length; i++) {\n            if (counter < n)\n                incr_items[i].classList.remove(\"rslidy-invisible\");\n            else\n                incr_items[i].classList.add(\"rslidy-invisible\");\n            counter++;\n        }\n    }\n    //\n    // Slide navigation methods\n    //\n    // ---\n    // Description: Hides all slides and shows specified slide then.\n    // slide_index: The index of the slide (0-indexed).\n    // animate: boolean to enable/disable animation\n    // ---\n    showSlide(targetSlideIndex, animate) {\n        window.rslidy.imageViewer.close();\n        window.rslidy.toolbar.closeMenuOnSelection();\n        if (targetSlideIndex < 0 && this.currentSlideIndex < 0)\n            targetSlideIndex = 0;\n        if (targetSlideIndex >= window.rslidy.num_slides)\n            targetSlideIndex = window.rslidy.num_slides - 1;\n        if (targetSlideIndex < 0 ||\n            targetSlideIndex >= window.rslidy.num_slides ||\n            this.currentSlideIndex == targetSlideIndex) {\n            var j = document.getElementById(\"rslidy-slide-input\");\n            j.value = \"\" + (this.currentSlideIndex + 1);\n            return;\n        }\n        this.slideTransition.doSlideTransition(this.currentSlideIndex, targetSlideIndex, animate);\n        this.progress_bar.style.width =\n            \"calc(100%*\" + (targetSlideIndex + 1) / window.rslidy.num_slides + \")\";\n        var pvs = document.getElementById(\"rslidy-progress-bar-nubs\").children;\n        for (var i = 0; i < pvs.length; i++) {\n            if (i < targetSlideIndex)\n                pvs[i].classList.add(\"rslidy-preview-reached\");\n            else\n                pvs[i].classList.remove(\"rslidy-preview-reached\");\n        }\n        // Hide speaker nodes\n        window.rslidy.toggleSpeakerNotes(null, true);\n        // Set 1-indexed value and new url\n        if (window.rslidy.running)\n            window.location.hash = \"#\" + (targetSlideIndex + 1);\n        else\n            history.replaceState({}, null, \"#\" + (targetSlideIndex + 1));\n        // Update slide caption\n        this.slide_caption.innerHTML = \" /\" + window.rslidy.num_slides;\n        this.slide_input.value = \"\" + (targetSlideIndex + 1);\n        this.currentSlideIndex = targetSlideIndex;\n        // RespVis Support\n        window.dispatchEvent(new Event('resize'));\n        // Disable toolbar stuff on first / last slide\n        this.enableFirstButtons();\n        this.enableLastButtons();\n        if (this.currentSlideIndex == 0)\n            this.disableFirstButtons();\n        if (this.currentSlideIndex + 1 == window.rslidy.num_slides)\n            this.disableLastButtons();\n    }\n    disableFirstButtons() {\n        document.getElementById(\"rslidy-button-first\").setAttribute(\"disabled\", \"true\");\n        document.getElementById(\"rslidy-button-previous\").setAttribute(\"disabled\", \"true\");\n    }\n    enableFirstButtons() {\n        document.getElementById(\"rslidy-button-first\").removeAttribute(\"disabled\");\n        document.getElementById(\"rslidy-button-previous\").removeAttribute(\"disabled\");\n    }\n    disableLastButtons() {\n        document.getElementById(\"rslidy-button-last\").setAttribute(\"disabled\", \"true\");\n        document.getElementById(\"rslidy-button-next\").setAttribute(\"disabled\", \"true\");\n    }\n    enableLastButtons() {\n        document.getElementById(\"rslidy-button-last\").removeAttribute(\"disabled\");\n        document.getElementById(\"rslidy-button-next\").removeAttribute(\"disabled\");\n    }\n    // ---\n    // Description: Returns the currently displayed slide index (0-indexed).\n    // ---\n    getCurrentSlideIndex() {\n        var url_parts = window.location.href.split(\"#\");\n        if (url_parts.length > 1) {\n            var hash = parseInt(url_parts[1]);\n            if (hash > 0)\n                return hash - 1;\n        }\n        return 0;\n    }\n}\n","import { image_viewer } from \"./html-definitions\";\nexport class ImageViewerComponent {\n    constructor() {\n        this.zoomFactor = 1.0;\n        this.mouseDragStartX = 0;\n        this.mouseDragStartY = 0;\n        this.imageOffsetX = 0;\n        this.imageOffsetY = 0;\n        this.active = false;\n        this.setImageViewerClasses();\n        this.view =\n            window.rslidy.utils.prependHtmlString(document.body, image_viewer);\n        this.images = document.getElementsByClassName(\"rslidy-slide-image\");\n        this.container = this.view.getElementsByClassName(\"rslidy-image-viewer-container\")[0];\n        this.modalImg = this.view.getElementsByClassName(\"rslidy-image-viewer-content\")[0];\n        this.addImageOnClickHandlers();\n        this.addButtonHandlers();\n        this.addMouseEventListeners();\n        this.view.style.backgroundColor = window.rslidy.image_viewer_background;\n    }\n    // ---\n    // Description: Closes the image viewer and resets values\n    // ---\n    close() {\n        this.modalImg.classList.add(\"rslidy-transition-enabled\");\n        this.modalImg.style.width = \"\";\n        this.modalImg.style.height = \"\";\n        this.modalImg.style.top = \"\";\n        this.modalImg.style.left = \"\";\n        this.view.style.display = \"none\";\n        this.zoomFactor = 1.0;\n        if (this.active) {\n            history.replaceState({}, null, \"#\" + (window.rslidy.content.currentSlideIndex + 1));\n            this.active = false;\n        }\n    }\n    // ---\n    // Description: Iterate over all slide images and set image viewer classes\n    // ---\n    setImageViewerClasses() {\n        var slides = document.getElementsByClassName(\"slide\");\n        let imgs = new Array();\n        for (let slide of slides) {\n            var imgsThisSlide = slide.getElementsByTagName(\"img\");\n            for (let img of imgsThisSlide) {\n                imgs.push(img);\n            }\n        }\n        window.rslidy.utils.addElementsClass(imgs, \"rslidy-slide-image\");\n    }\n    // ---\n    // Description: Add the onclick handler to all slide images\n    // ---\n    addImageOnClickHandlers() {\n        for (var i = 0; i < this.images.length; i++) {\n            let image = this.images.item(i);\n            if (image.classList.contains('disable-image-viewer'))\n                continue;\n            image.ontouchend = () => {\n                this.touch = true;\n            };\n            image.onclick = () => {\n                if (!window.rslidy.image_viewer)\n                    return;\n                if (this.touch) {\n                    this.touch = false;\n                    return;\n                }\n                //setup browser back button to close image viewer\n                history.pushState(null, null, window.location.href.replace(window.location.hash, \"#\"));\n                this.view.style.display = \"block\";\n                this.modalImg.src = image.src;\n                var theImage = new Image();\n                theImage.src = image.src;\n                this.imageWidth = theImage.width;\n                this.imageHeight = theImage.height;\n                // fix for firefox\n                if (this.imageWidth == 0) {\n                    this.imageWidth = this.modalImg.width;\n                }\n                if (this.imageHeight == 0) {\n                    this.imageHeight = this.modalImg.height;\n                }\n                this.containerWidth = this.container.clientWidth;\n                this.containerHeight = this.container.clientHeight;\n                this.initialZoom();\n                this.isInsideContainer = true;\n                this.active = true;\n            };\n            // prevent links around images, they can still be used with\n            // right click -> open link in ...\n            if (image.parentNode.nodeName.toLowerCase() === 'a') {\n                image.parentElement.onclick = e => {\n                    e.preventDefault();\n                    e.stopPropagation();\n                };\n            }\n        }\n    }\n    // ---\n    // Description: Adds handlers for the image viewer buttons\n    // ---\n    addButtonHandlers() {\n        var spanClose = this.view.getElementsByClassName(\"rslidy-iv-close\")[0];\n        spanClose.addEventListener(\"click\", () => {\n            this.close();\n        });\n        var spanZoomIn = this.view.getElementsByClassName(\"rslidy-iv-zoom-in\")[0];\n        spanZoomIn.addEventListener(\"click\", () => {\n            this.zoomIn();\n        });\n        var spanZoomOut = this.view.getElementsByClassName(\"rslidy-iv-zoom-out\")[0];\n        spanZoomOut.addEventListener(\"click\", () => {\n            this.zoomOut();\n        });\n        var spanZoomReset = document.getElementsByClassName(\"rslidy-iv-zoom-reset\")[0];\n        spanZoomReset.addEventListener(\"click\", () => {\n            this.initialZoom();\n        });\n    }\n    // ---\n    // Description: Adds support for mouse events\n    // ---\n    addMouseEventListeners() {\n        var mouseDown = false;\n        this.container.addEventListener(\"mouseenter\", (mouseDownEvent) => {\n            this.isInsideContainer = true;\n        });\n        this.container.addEventListener(\"mouseleave\", (mouseDownEvent) => {\n            this.isInsideContainer = false;\n        });\n        window.addEventListener(\"resize\", () => {\n            if (this.active) {\n                this.containerWidth = this.container.clientWidth;\n                this.containerHeight = this.container.clientHeight;\n                this.applyOffset(true);\n            }\n        });\n        this.view.addEventListener(\"wheel\", (mouseWheelEvent) => {\n            mouseWheelEvent.preventDefault();\n            var delta = Math.max(-1, Math.min(1, mouseWheelEvent.deltaY || -mouseWheelEvent.deltaY));\n            if (delta > 0) {\n                this.zoomIn();\n                var factor = 1 - this.zoomFactor * 1.2 / this.zoomFactor;\n                this.imageOffsetX +=\n                    (mouseWheelEvent.clientX - window.innerWidth / 2) * factor;\n                this.imageOffsetY +=\n                    (mouseWheelEvent.clientY - window.innerHeight / 2) * factor;\n                this.applyOffset(false);\n            }\n            else if (delta != 0) {\n                this.zoomOut();\n                var factor = 1 - this.zoomFactor / 1.2 / this.zoomFactor;\n                if (this.zoomFactor / 1.2 > this.initialZoomFactor / 10) {\n                    this.imageOffsetX +=\n                        (mouseWheelEvent.clientX - window.innerWidth / 2) * factor;\n                    this.imageOffsetY +=\n                        (mouseWheelEvent.clientY - window.innerHeight / 2) * factor;\n                    this.applyOffset(false);\n                }\n            }\n        }, { passive: true });\n        this.view.addEventListener(\"mousedown\", (mouseDownEvent) => {\n            mouseDownEvent.preventDefault();\n            if (!this.isInsideContainer) {\n                return;\n            }\n            this.mouseDragStartX = mouseDownEvent.clientX;\n            this.mouseDragStartY = mouseDownEvent.clientY;\n            this.modalImg.classList.remove(\"rslidy-transition-enabled\");\n            mouseDown = true;\n        });\n        this.view.addEventListener(\"mousemove\", (mouseMoveEvent) => {\n            mouseMoveEvent.preventDefault();\n            if (!mouseDown) {\n                return;\n            }\n            this.imageOffsetX =\n                this.imageOffsetX + mouseMoveEvent.clientX - this.mouseDragStartX;\n            this.imageOffsetY =\n                this.imageOffsetY + mouseMoveEvent.clientY - this.mouseDragStartY;\n            this.mouseDragStartX = mouseMoveEvent.clientX;\n            this.mouseDragStartY = mouseMoveEvent.clientY;\n            this.applyOffset(false);\n        });\n        this.view.addEventListener(\"mouseup\", mouseUpEvent => {\n            mouseDown = false;\n        });\n    }\n    // ---\n    // Description: Zoom in on the image\n    // ---\n    zoomIn() {\n        this.modalImg.classList.add(\"rslidy-transition-enabled\");\n        this.zoomFactor *= 1.2;\n        this.imageOffsetX =\n            this.containerWidth / 2.0 -\n                (-this.imageOffsetX + this.containerWidth / 2.0) * 1.2;\n        this.imageOffsetY =\n            this.containerHeight / 2.0 -\n                (-this.imageOffsetY + this.containerHeight / 2.0) * 1.2;\n        this.modalImg.style.width = this.imageWidth * this.zoomFactor + \"px\";\n        this.modalImg.style.height = this.imageHeight * this.zoomFactor + \"px\";\n        this.applyOffset(false);\n    }\n    // ---\n    // Description: Zoom out of the image\n    // ---\n    zoomOut() {\n        this.modalImg.classList.add(\"rslidy-transition-enabled\");\n        var zoomBefore = this.zoomFactor;\n        this.zoomFactor /= 1.2;\n        if (this.zoomFactor < this.initialZoomFactor / 10) {\n            this.zoomFactor = this.initialZoomFactor / 10;\n        }\n        this.imageOffsetX =\n            this.containerWidth / 2.0 -\n                (-this.imageOffsetX + this.containerWidth / 2.0) /\n                    (zoomBefore / this.zoomFactor);\n        this.imageOffsetY =\n            this.containerHeight / 2.0 -\n                (-this.imageOffsetY + this.containerHeight / 2.0) /\n                    (zoomBefore / this.zoomFactor);\n        this.modalImg.style.width = this.imageWidth * this.zoomFactor + \"px\";\n        this.modalImg.style.height = this.imageHeight * this.zoomFactor + \"px\";\n        this.applyOffset(false);\n    }\n    // ---\n    // Description: Offset the image\n    // center: set true to re-center the image, used for initialZoom()\n    // ---\n    applyOffset(center) {\n        var currentImageWidth = this.imageWidth * this.zoomFactor;\n        var currentImageHeight = this.imageHeight * this.zoomFactor;\n        if (center) {\n            if (currentImageWidth <= this.containerWidth) {\n                this.imageOffsetX = (this.containerWidth - currentImageWidth) / 2.0;\n            }\n            else {\n                if (this.containerWidth - this.imageOffsetX >= currentImageWidth) {\n                    this.imageOffsetX = this.containerWidth - currentImageWidth;\n                }\n                else if (this.imageOffsetX > 0) {\n                    this.imageOffsetX = 0;\n                }\n            }\n            if (currentImageHeight <= this.containerHeight) {\n                this.imageOffsetY = (this.containerHeight - currentImageHeight) / 2.0;\n            }\n            else {\n                if (this.containerHeight - this.imageOffsetY >= currentImageHeight) {\n                    this.imageOffsetY = this.containerHeight - currentImageHeight;\n                }\n                else if (this.imageOffsetY > 0) {\n                    this.imageOffsetY = 0;\n                }\n            }\n        }\n        this.modalImg.style.left = this.imageOffsetX + \"px\";\n        this.modalImg.style.top = this.imageOffsetY + \"px\";\n    }\n    // ---\n    // Description: Setup or revert to the initial zoom level\n    // ---\n    initialZoom() {\n        var aspectImg = this.imageWidth / this.imageHeight;\n        var aspectContainer = this.containerWidth / this.containerHeight;\n        if (aspectContainer > aspectImg) {\n            this.initialZoomFactor = this.containerHeight / this.imageHeight;\n            this.imageOffsetX =\n                (this.containerWidth - this.imageWidth * this.zoomFactor) / 2.0;\n        }\n        else {\n            this.initialZoomFactor = this.containerWidth / this.imageWidth;\n            this.imageOffsetY =\n                (this.containerHeight - this.imageHeight * this.zoomFactor) / 2.0;\n        }\n        this.zoomFactor = this.initialZoomFactor;\n        this.modalImg.style.width = this.imageWidth * this.zoomFactor + \"px\";\n        this.modalImg.style.height = this.imageHeight * this.zoomFactor + \"px\";\n        this.applyOffset(true);\n    }\n}\n","import { Utils } from \"./utils\";\nimport { SettingsComponent } from \"./settings\";\nimport { PrintSettingsComponent } from \"./print-settings\";\nimport { ToolbarComponent } from \"./toolbar\";\nimport { OverviewComponent } from \"./overview\";\nimport { ContentComponent } from \"./content\";\nimport { ImageViewerComponent } from \"./image-viewer\";\nimport { help_text, content_section, notes_text, spinner_html } from './html-definitions';\n// Implements the core functionality.\nexport class Rslidy {\n    constructor() {\n        // Members\n        this.utils = new Utils();\n        this.running = false;\n        this.num_slides = 0;\n        this.shift_pressed = false;\n        /*ctrl_pressed: boolean = false;\n        alt_pressed: boolean = false;\n        meta_pressed: boolean = false;*/\n        this.low_light_mode = false;\n        this.shortcuts_disabled = false;\n        this.timer_enabled = false;\n        this.timer_time = 0;\n        this.timer_thread = null;\n        //Custom settings\n        this.image_viewer = true;\n        // Presentation time in seconds. 0 to disable (hides timer).\n        this.presentation_time = 0;\n        this.close_menu_on_selection = false;\n        this.close_menu_on_blur = true;\n        this.close_navigation_on_selection = false;\n        this.show_slide_dividers = true;\n        this.start_in_low_light_mode = false;\n        this.start_with_toolbar_minimized = false;\n        this.block_slide_text_selection = false;\n        // Advanced custom settings\n        /* Use of custom aspect ratio for slides. Possible values are e.g. 4/3 or\n        16/9. 0 disables it and makes it calculate dynamically. */\n        this.custom_aspect_ratio = 4 / 3;\n        // Used when custom_aspect_ratio is set to a value greater than zero.\n        this.custom_width = 1000;\n        this.overview_slide_zoom = 1.2;\n        this.doubletap_delay = 200; // Double tap delay in ms\n        this.min_slide_font = 0.1; // in em\n        this.max_slide_font = 5.0; // in em\n        this.font_step = 0.1; // in em\n        this.swipe_max_duration = 400; // maximum duration of swipe in ms\n        this.swipe_threshold = 3.75; // swipe distance in rem\n        /* how many times the x distance should be greater than the y distance (1.0\n        means x has to be > y, 2.0 means x has to be > 2 * y, 0.0 means disabled) */\n        this.swipe_y_limiter = 1.0;\n        this.print_frame = \"0.05rem solid black\";\n        this.image_viewer_background = \"rgba(0, 0, 0, 0.9)\";\n        // Members storing relevant data for touch gestures\n        this.tap_last = 0;\n        this.start_x = 0;\n        this.start_y = 0;\n        this.delta_x = 0;\n        this.delta_y = 0;\n        // Members storing relevant data for TILT/SHAKE gestures\n        // Shake sensitivity, smaller number = more shake required\n        this.shake_sensitivity = 0.8;\n        this.shakes = 0; // Current number of shakes\n        this.required_shakes = 4; // Number of consecutive shakes required\n        this.last_shake = 0; // Time of last shake (in ms)\n        // Timeframe for reaching required_shakes, resets with each shake\n        this.shake_time_limit = 500;\n        // Only accept shakes after a certain interval\n        // Prevents false positives for devices with high refresh rates\n        this.min_shake_interval = 50;\n        // An action will be performed after returning to tilt_center from an angle\n        // between tilt_lower and tilt_upper\n        this.tilt = 0; // Current tilt angle\n        this.tilt_center = 10;\n        this.tilt_lower = 15; // Range ~ 15-40\n        this.tilt_upper = 35;\n        this.tilt_allowed = false; // If true, perform a tilt action when possible\n        this.tilt_action = null; // Gets set to either navPrevious or navNext\n        // Constants\n        this.MENU = 0;\n        this.PRINT_MENU = 1;\n    }\n    // ---\n    // Description: Handles the initialization of rslidy, e.g. setting up the\n    // menus.\n    // ---\n    init() {\n        // check for section over div slide and add classes for compatibility\n        const sections = document.getElementsByTagName(\"section\");\n        for (let i = 0; i < sections.length; i++)\n            if (sections[i].parentElement.nodeName == \"BODY\")\n                sections[i].classList.add(\"slide\");\n        // generate html from slides for overview thumbnails, and add aria tags\n        const slides = document.querySelectorAll(\".slide\");\n        this.num_slides = slides.length;\n        if (this.num_slides == 0)\n            return;\n        const slides_html = new Array(this.num_slides);\n        for (let i = 0; i < this.num_slides; i++) {\n            slides_html[i] = slides[i].outerHTML.replace(/id=\\\"*\\\"/g, \"\");\n            slides_html[i] = slides_html[i].replace(/href=\\\"*\\\"/g, \"class=\\\"rslidy-link\\\"\");\n            slides[i].setAttribute(\"role\", \"region\");\n            slides[i].setAttribute(\"aria-label\", \"Slide \" + (i + 1));\n        }\n        // create a wrapper for the new body\n        var wrapper = document.createElement(\"div\");\n        wrapper.id = \"rslidy-column-flex\";\n        // add content section to the wrapper\n        this.utils.appendHtmlString(wrapper, content_section);\n        var cs = wrapper.querySelector('#rslidy-content-section');\n        // move the old body's children into the content section\n        while (document.body.firstChild)\n            cs.appendChild(document.body.firstChild);\n        // Append the wrapper to the body\n        document.body.appendChild(wrapper);\n        this.imageViewer = new ImageViewerComponent();\n        this.utils.prependHtmlString(document.body, notes_text);\n        this.utils.prependHtmlString(document.body, help_text);\n        this.toolbar = new ToolbarComponent();\n        this.settings = new SettingsComponent();\n        this.printSettings = new PrintSettingsComponent();\n        this.overview = new OverviewComponent(slides_html);\n        this.content = new ContentComponent(cs);\n        // If hash is on help, show the first slide and the help panel\n        if (window.location.hash.match(\"#rslidy-help\")) {\n            this.content.showSlide(0, false);\n            this.toolbar.helpToggleClicked();\n        }\n        // Show first slide with bad or no hash\n        else if (!window.location.hash.match(/#[0-9]+/))\n            this.content.showSlide(0, false);\n        this.addListeners();\n        this.initTimer();\n        this.onHashchange();\n        this.settings.loadSettings();\n        this.settings.doCustomSettingAdaptions();\n        this.printSettings.loadSettings();\n        this.setTabindexAndCallbacks();\n        window.onbeforeunload = () => {\n            this.settings.saveSettings();\n            this.printSettings.saveSettings();\n        };\n        // Disable keyboard shortcuts on right click menu open\n        window.oncontextmenu = (e) => {\n            this.shortcuts_disabled = true;\n            setTimeout(() => this.shortcuts_disabled = false, 3000);\n        };\n        this.running = true;\n    }\n    // ---\n    // Description: Sets tabindex, aria tags and callbacks for checkboxes\n    // ---\n    setTabindexAndCallbacks() {\n        var labels = document.querySelectorAll(`label[id*=\"checkbox\"]`);\n        for (let i = 0; i < labels.length; i++) {\n            let l = labels[i];\n            l.setAttribute(\"tabindex\", \"0\");\n            var input = l.querySelector(\"input\");\n            l.setAttribute(\"role\", \"checkbox\");\n            l.setAttribute(\"aria-checked\", String(input.checked));\n            input.addEventListener(\"change\", function () {\n                l.setAttribute(\"aria-checked\", String(this.checked));\n            });\n            l.addEventListener(\"keyup\", e => this.checkboxCallback(e, l));\n        }\n    }\n    // ---\n    // Description: Handles keyup for checkboxes\n    // e: event\n    // l: the label of the checkbox\n    // ---\n    checkboxCallback(e, l) {\n        if (l != document.activeElement)\n            return;\n        var key = e.keyCode ? e.keyCode : e.which;\n        if (key == 13 || key == 32) { //return and space\n            var i = l.querySelector(\"input\");\n            if (!i.disabled) {\n                i.checked = !i.checked;\n                l.setAttribute(\"aria-checked\", String(i.checked));\n                i.dispatchEvent(new Event(\"click\"));\n            }\n        }\n    }\n    // ---\n    // Description: Adds event listeners like left/right keys.\n    // ---\n    addListeners() {\n        // Key listeners\n        window.onkeyup = e => this.keyPressed(e);\n        // Window listeners\n        window.addEventListener(\"hashchange\", function () {\n            this.onHashchange();\n        }.bind(this));\n        // Allow simple touch events on speaker notes overlay (double tap -> hide)\n        var speaker_notes_overlay = document.getElementById(\"rslidy-speakernotes-overlay\");\n        speaker_notes_overlay.addEventListener(\"touchstart\", e => this.content.onTouchstart(e), { passive: true });\n        // Window listeners\n        window.onresize = function (e) {\n            this.overview.adjustOverviewPanel();\n        }.bind(this);\n        // Device listeners used for TILT and SHAKE\n        // add only if possible without permissions\n        if (window.DeviceMotionEvent &&\n            !(typeof window.DeviceMotionEvent.requestPermission === 'function')) {\n            window.addEventListener(\"devicemotion\", function (e) {\n                this.onDeviceMotion(e);\n            }.bind(this));\n        }\n        if (window.DeviceOrientationEvent &&\n            !(typeof window.DeviceOrientationEvent.requestPermission === 'function')) {\n            window.addEventListener(\"deviceorientation\", function (e) {\n                this.onDeviceOrientation(e);\n            }.bind(this));\n        }\n    }\n    // ---\n    // Description: Initializes the timer.\n    // ---\n    initTimer() {\n        // Initialize the timer or hide it if this.presentation_time <= 0\n        var timer = document.getElementById(\"rslidy-timer\");\n        // Hide timer or set time\n        if (this.presentation_time <= 0)\n            timer.classList.add(\"rslidy-hidden\");\n        else {\n            var minutes = Math.floor(this.presentation_time / 60);\n            var seconds = this.presentation_time % 60;\n            timer.innerHTML =\n                this.utils.toTwoDigits(minutes) + \":\" + this.utils.toTwoDigits(seconds);\n            this.timer_time = this.presentation_time;\n        }\n    }\n    // ---\n    // Description: Toggles the timer. Works only if this.presentation_time > 0.\n    // ---\n    toggleTimer() {\n        // Return if this.presentation_time <= 0\n        if (this.presentation_time <= 0)\n            return;\n        // Reset and return if this.timer_time <= 0\n        if (this.timer_time <= 0) {\n            this.initTimer();\n            return;\n        }\n        if (this.timer_enabled == false) {\n            // Run\n            this.timer_thread = setInterval(function () {\n                // Break out if this.presentation_time is <= 0\n                if (this.timer_time <= 0) {\n                    clearInterval(this.timer_thread);\n                    this.timer_enabled = false;\n                    return;\n                }\n                this.timer_time -= 1;\n                var timer = document.getElementById(\"rslidy-timer\");\n                var minutes = Math.floor(this.timer_time / 60);\n                var seconds = this.timer_time % 60;\n                timer.innerHTML =\n                    this.utils.toTwoDigits(minutes) +\n                        \":\" +\n                        this.utils.toTwoDigits(seconds);\n            }.bind(this), 1000);\n            this.timer_enabled = true;\n        }\n        else {\n            // Stop\n            clearInterval(this.timer_thread);\n            this.timer_enabled = false;\n        }\n    }\n    // ---\n    // Description: Called whenever a key is pressed.\n    // e: Event.\n    // ---\n    keyPressed(e) {\n        var key = e.keyCode ? e.keyCode : e.which;\n        // Check if input or textarea has focus, if so, cancel\n        var n = document.activeElement.nodeName;\n        if (n === \"INPUT\" || n === \"TEXTAREA\")\n            return;\n        // If flag is set, disable it and ignore current input\n        if (this.shortcuts_disabled) {\n            this.shortcuts_disabled = false;\n            return;\n        }\n        // Ignore keys when viewing all slides, except toggle back and fonts\n        if (this.toolbar.allslides && !(key == 65 || key == 82 || key > 100))\n            return;\n        // Ignore unused modifiers (to allow ctrl+c etc.)\n        if (e.ctrlKey || e.altKey || e.metaKey)\n            return;\n        // Modifier keys (SHIFT, CTRL, ALT, META (WIN on Windows, CMD on Mac))\n        this.shift_pressed = e.shiftKey;\n        /*this.ctrl_pressed = e.ctrlKey;\n        this.alt_pressed = e.altKey;\n        this.meta_pressed = e.metaKey;*/\n        //console.log(\"Key event: \" + key + \" \" + String.fromCharCode(key));\n        // Normal key codes\n        switch (key) {\n            case 32: //space\n                if (document.getElementById(\"rslidy-checkbox-space\").checked)\n                    this.content.navNext(true);\n                break;\n            case 34: //page down\n            case 39: //right\n                this.content.navNext(true);\n                break;\n            case 33: //page up\n            case 37: //left\n                this.content.navPrevious(true);\n                break;\n            case 35: //end\n                this.content.navLast();\n                break;\n            case 36: //home\n                this.content.navFirst();\n                break;\n            case 78: //N\n                this.toggleSpeakerNotes(null, false);\n                break;\n            case 65: //A\n                this.toolbar.displayToggleClicked();\n                break;\n            case 67: //C\n                this.toolbar.tocToggleClicked();\n                break;\n            case 79: //O\n                this.toolbar.overviewToggleClicked();\n                break;\n            case 72: //H\n                this.toolbar.helpToggleClicked();\n                break;\n            case 83: //S\n                this.toolbar.menuToggleClicked(this.MENU);\n                break;\n            case 80: //P\n                this.toolbar.menuToggleClicked(this.PRINT_MENU);\n                break;\n            case 84: //T\n                this.toolbar.showHideToggleClicked();\n                break;\n            case 74: //J\n                this.focusJumpText();\n                break;\n            case 107: //+\n            case 171: //+\n            case 187: //+ (chrome)\n                if (this.imageViewer.active)\n                    this.imageViewer.zoomIn();\n                else if (this.shift_pressed)\n                    this.settings.changeUIFont(null, 1);\n                else\n                    this.settings.changeSlideFont(null, 1);\n                break;\n            case 109: //-\n            case 173: //-\n            case 189: //- (chrome)\n                if (this.imageViewer.active)\n                    this.imageViewer.zoomOut();\n                else if (this.shift_pressed)\n                    this.settings.changeUIFont(null, -1);\n                else\n                    this.settings.changeSlideFont(null, -1);\n                break;\n            case 82: //R\n                if (this.imageViewer.active)\n                    this.imageViewer.initialZoom();\n                else if (this.shift_pressed)\n                    this.settings.changeUIFont(null, 0);\n                else\n                    this.settings.changeSlideFont(null, 0);\n                break;\n            case 27: //escape\n                this.imageViewer.close();\n                this.toolbar.closeMenues();\n                break;\n            default:\n                if (key >= 48 && key <= 57) //48-57 -> 0-9\n                    this.focusJumpText(key - 48);\n        }\n    }\n    // ---\n    // Description: Focus the rslidy-slide-input for Jump to Slide\n    // n (optional): Adds the number to the input field\n    // ---\n    focusJumpText(n) {\n        var j = document.getElementById(\"rslidy-slide-input\");\n        if (n == undefined)\n            j.value = \"\";\n        else\n            j.value = \"\" + n;\n        j.focus();\n    }\n    // ---\n    // Description: Called whenever a key in the slide input text box was pressed.\n    // e: The event.\n    // ---\n    slideInputKeyPressed(e) {\n        var key = e.keyCode ? e.keyCode : e.which;\n        var slide_input = document.getElementById(\"rslidy-slide-input\");\n        var value = slide_input.value;\n        if (key == 13 /*enter*/) {\n            var is_number = /^[0-9]+$/.test(value);\n            if (is_number == true)\n                this.content.showSlide(this.utils.toInt(value) - 1, false);\n            else\n                slide_input.value = this.content.getCurrentSlideIndex() + 1;\n            // Take away focus\n            slide_input.blur();\n        }\n    }\n    // ---\n    // Description: Called whenever the night mode button is clicked.\n    // ---\n    toggleLowLightMode() {\n        // Inverts everything, then reverts individual elements again after \"html\"\n        // which should stay the same (e.g. images)\n        const invert = [\"html\", \"img\"];\n        for (let i = 0; i < invert.length; i++) {\n            let elements = document.getElementsByTagName(invert[i]);\n            this.utils.switchElementsClass(elements, \"rslidy-color-invert\");\n        }\n        // Add custom classes to h1, h2, h3, p, span, li, ul, ol, pre and a\n        const custom_classes = [\n            \"h1\",\n            \"h2\",\n            \"h3\",\n            \"p\",\n            //\"span\",\n            \"li\",\n            \"ul\",\n            \"ol\",\n            \"pre\",\n            \"a\"\n        ];\n        for (let i = 0; i < custom_classes.length; i++) {\n            let elements = document.getElementsByTagName(custom_classes[i]);\n            this.utils.switchElementsClass(elements, \"rslidy-night-mode\");\n            this.utils.invertElementsColor(elements, this.low_light_mode);\n        }\n        this.low_light_mode = !this.low_light_mode;\n    }\n    // ---\n    // Description: Called whenever the address field content changes.\n    // ---\n    onHashchange() {\n        if (window.location.hash.match(/#[0-9]+/))\n            this.content.showSlide(this.content.getCurrentSlideIndex(), false);\n    }\n    // ---\n    // Description: Called whenever the orientation of a device changes.\n    // e: Event.\n    //\n    // Tilt controls are implemented as follows: There are 3 angles, tilt_center\n    // tilt_lower and tilt_upper. If the device is tilted above the lower angle\n    // and back to the center, a tilt action is performed. If the devices is\n    // tilted too far (above the upper angle), no action can be performed until\n    // the device is tilted back to the center. With this switching from\n    //  portrait to landscape mode causes no tilt action.\n    // ---\n    onDeviceOrientation(e) {\n        //chrome fires this event with all values being null on all devices\n        if (e.alpha == null && e.beta == null && e.gamma == null)\n            return;\n        // Init if event was fired and necessary\n        var checkbox_tilt = document.getElementById(\"rslidy-checkbox-tilt\");\n        if (checkbox_tilt.disabled == true) {\n            checkbox_tilt.disabled = false;\n            checkbox_tilt.checked = true;\n            document\n                .getElementById(\"rslidy-checkbox-tilt-text\")\n                .setAttribute(\"aria-disabled\", \"false\");\n            document\n                .getElementById(\"rslidy-checkbox-tilt-text\")\n                .setAttribute(\"aria-checked\", \"true\");\n            document\n                .getElementById(\"rslidy-checkbox-tilt-text\")\n                .classList.remove(\"rslidy-disabled\");\n        }\n        // Return if not activated\n        if (checkbox_tilt.checked == false)\n            return;\n        // Store values\n        var value = 0;\n        var tilt_multiplier = 1;\n        var safari = /.*Version.*Safari.*/.test(navigator.userAgent);\n        if (window.innerHeight > window.innerWidth) {\n            // Portrait mode\n            value = Math.round(e.gamma);\n            tilt_multiplier = 1.75;\n            // safari has -180 and 180, others -90 and 90\n            if (safari) {\n                value /= 1.5;\n                tilt_multiplier = 1;\n            }\n        }\n        else {\n            // Landscape mode\n            value = Math.round(e.beta);\n            // safari has -90 and 90, others -180 and 180\n            if (safari)\n                value *= 2;\n        }\n        // Upside down Portrait/Landscape mode\n        if (\"orientation\" in screen) {\n            // @ts-ignore\n            var orientation = screen.msOrientation || screen.mozOrientation || (screen.orientation || {}).type;\n            if (!(orientation === undefined) && orientation.includes(\"secondary\"))\n                value = -value;\n        } // safari\n        else if (window.orientation < 0 || window.orientation >= 180)\n            value = -value;\n        this.tilt = value;\n        // Only allow tilt gestures after holding the device upright again\n        if (value > -this.tilt_center && value < this.tilt_center) {\n            if (this.tilt_allowed && this.tilt_action != null) {\n                this.shift_pressed = true;\n                this.tilt_action();\n                this.tilt_action = null;\n                this.shift_pressed = false;\n            }\n            this.tilt_allowed = true;\n        }\n        if (value >= this.tilt_lower * tilt_multiplier &&\n            value <= this.tilt_upper * tilt_multiplier)\n            this.tilt_action = () => this.content.navNext(true);\n        if (value <= -this.tilt_lower * tilt_multiplier &&\n            value >= -this.tilt_upper * tilt_multiplier)\n            this.tilt_action = () => this.content.navPrevious(true);\n        if (value >= this.tilt_upper * tilt_multiplier ||\n            value <= -this.tilt_upper * tilt_multiplier) {\n            this.tilt_action = null;\n            this.tilt_allowed = false;\n        }\n    }\n    // ---\n    // Description: Called whenever the acceleration of the device changes.\n    // e: Event.\n    //\n    // The shake gesture fires when the number of consecutive shakes (stored in\n    // the variable shakes) exceeds the value of the variable required_shakes\n    // within a certain time limit (defined by the variable shake_time_limit)\n    // ---\n    onDeviceMotion(e) {\n        //chrome fires this event with all values being null on all devices\n        if (e.acceleration.x == null &&\n            e.acceleration.y == null &&\n            e.acceleration.z == null)\n            return;\n        // Init if event was fired and necessary\n        var checkbox_shake = document.getElementById(\"rslidy-checkbox-shake\");\n        if (checkbox_shake.disabled == true) {\n            checkbox_shake.disabled = false;\n            checkbox_shake.checked = true;\n            document\n                .getElementById(\"rslidy-checkbox-shake-text\")\n                .setAttribute(\"aria-disabled\", \"false\");\n            document\n                .getElementById(\"rslidy-checkbox-shake-text\")\n                .setAttribute(\"aria-checked\", \"true\");\n            document\n                .getElementById(\"rslidy-checkbox-shake-text\")\n                .classList.remove(\"rslidy-disabled\");\n        }\n        // Return if not activated\n        if (checkbox_shake.checked == false)\n            return;\n        var acc_threshold = 10.0 / this.shake_sensitivity;\n        var now = (new Date).getTime();\n        var shake_interval = Math.abs(now - this.last_shake);\n        // Reset shake counter when past the time limit\n        if (shake_interval > this.shake_time_limit) {\n            this.shakes = 0;\n            this.last_shake = now;\n        }\n        // Increase shake counter if shake is stronger than threshold\n        if ((e.acceleration.x > acc_threshold ||\n            e.acceleration.y > acc_threshold ||\n            e.acceleration.z > acc_threshold) &&\n            shake_interval < this.shake_time_limit &&\n            shake_interval > this.min_shake_interval) {\n            this.shakes += 1;\n            if (this.shakes >= this.required_shakes)\n                this.content.navFirst();\n            this.last_shake = now;\n        }\n    }\n    // ---\n    // Description: Toggles speaker nodes for current slide if available.\n    // e: Event coming from double tap, null otherwise.\n    // always_hide: If true, speaker nodes are hidden regardless of the current\n    // status.\n    // ---\n    toggleSpeakerNotes(e, always_hide) {\n        always_hide = always_hide || false;\n        // Get current status\n        var speaker_notes_overlay = document.getElementById(\"rslidy-speakernotes-overlay\");\n        var hidden = speaker_notes_overlay.classList.contains(\"rslidy-hidden\");\n        // Hide speaker notes if necessary\n        if (hidden == false || always_hide == true) {\n            speaker_notes_overlay.classList.add(\"rslidy-hidden\");\n            // Prevent default double tap event if notes were visible\n            if (e != null && hidden == false) {\n                e.preventDefault();\n                e.stopPropagation();\n            }\n            return;\n        }\n        // Get current speaker notes (if there are any)\n        var content_section = document.getElementById(\"rslidy-content-section\");\n        var current_slide = content_section.getElementsByClassName(\"slide\")[this.content.getCurrentSlideIndex()];\n        var speaker_notes = current_slide.getElementsByClassName(\"speakernotes\").length == 1\n            ? current_slide.getElementsByClassName(\"speakernotes\")[0]\n            : null;\n        // Show speaker notes and set new text if necessary\n        if (speaker_notes != null) {\n            speaker_notes_overlay.classList.remove(\"rslidy-hidden\");\n            speaker_notes_overlay.innerHTML =\n                '<div class=\"rslidy-speakernotes-container\">' +\n                    speaker_notes.innerHTML +\n                    \"</div>\";\n            // Prevent default double tap event if notes were hidden\n            if (e != null && hidden == true) {\n                e.preventDefault();\n                e.stopPropagation();\n            }\n        }\n    }\n}\nfunction start() {\n    var t0 = performance.now();\n    //inject loading spinner and hide body overflowing behind the spinner\n    document.body.insertAdjacentHTML('afterbegin', spinner_html);\n    document.body.style.overflow = 'hidden';\n    //timeout allows the browser to repaint and display the spinner\n    setTimeout(() => {\n        window.rslidy.init();\n        //hide the spinner again after rslidy is done\n        document.getElementById('rslidy-spinner').classList.add('rslidy-hidden');\n        var t1 = performance.now();\n        console.log(\"Time to first slide: \" + (t1 - t0) + \" milliseconds.\");\n    }, 1);\n}\nwindow.rslidy = new Rslidy();\ndocument.addEventListener(\"DOMContentLoaded\", start);\n"],"names":[],"sourceRoot":""}